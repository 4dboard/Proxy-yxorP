1688053738
waR3U4bTeM%3A22f91897535c5dea1446d2476a57719d-0e29465d3f5ad8bc6e15e3f66f260a45
s:5744:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDE6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tCgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjBlMjk0NjVkM2Y1YWQ4YmM2ZTE1ZTNmNjZmMjYwYTQ1IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiYWRtaW4ucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzE6ImNvY2twaXQvbW9kdWxlcy9Gb3Jtcy9hZG1pbi5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjIzNTA6Ijw/cGhwDQovKioNCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuDQogKg0KICogKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tDQogKg0KICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UNCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLg0KICovDQoNCiRhcHAtPm9uKCdhZG1pbi5pbml0JywgZnVuY3Rpb24oKSB7DQoNCiAgICBpZiAoISR0aGlzLT5tb2R1bGUoJ2NvY2twaXQnKS0+Z2V0R3JvdXBSaWdodHMoJ2Zvcm1zJykpIHsNCg0KICAgICAgICAkdGhpcy0+YmluZCgnL2Zvcm1zLyonLCBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHJldHVybiAkdGhpcygnYWRtaW4nKS0+ZGVueVJlcXVlc3QoKTsNCiAgICAgICAgfSk7DQoNCiAgICAgICAgcmV0dXJuOw0KICAgIH0NCg0KICAgIC8vIGJpbmQgYWRtaW4gcm91dGVzIC9mb3Jtcy8qDQogICAgJHRoaXMtPmJpbmRDbGFzcygnRm9ybXNcXENvbnRyb2xsZXJcXEFkbWluJywgJ2Zvcm1zJyk7DQoNCiAgICAkYWN0aXZlID0gc3RycG9zKCR0aGlzWydyb3V0ZSddLCAnL2Zvcm1zJykgPT09IDA7DQoNCiAgICAvLyBhZGQgdG8gbW9kdWxlcyBtZW51DQogICAgJHRoaXMtPmhlbHBlcignYWRtaW4nKS0+YWRkTWVudUl0ZW0oJ21vZHVsZXMnLCBbDQogICAgICAgICdsYWJlbCcgPT4gJ0Zvcm1zJywNCiAgICAgICAgJ2ljb24nICA9PiAnZm9ybXM6aWNvbi5zdmcnLA0KICAgICAgICAncm91dGUnID0+ICcvZm9ybXMnLA0KICAgICAgICAnYWN0aXZlJyA9PiAkYWN0aXZlDQogICAgXSk7DQoNCiAgICBpZiAoJGFjdGl2ZSkgew0KICAgICAgICAkdGhpcy0+aGVscGVyKCdhZG1pbicpLT5mYXZpY29uID0gJ2Zvcm1zOmljb24uc3ZnJzsNCiAgICB9IA0KDQogICAgLyoqDQogICAgICogbGlzdGVuIHRvIGFwcCBzZWFyY2ggdG8gZmlsdGVyIGZvcm1zDQogICAgICovDQogICAgJHRoaXMtPm9uKCdjb2NrcGl0LnNlYXJjaCcsIGZ1bmN0aW9uKCRzZWFyY2gsICRsaXN0KSB7DQoNCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPm1vZHVsZSgnZm9ybXMnKS0+Zm9ybXMoKSBhcyAkZm9ybSA9PiAkbWV0YSkgew0KDQogICAgICAgICAgICBpZiAoc3RyaXBvcygkZm9ybSwgJHNlYXJjaCkhPT1mYWxzZSB8fCBzdHJpcG9zKCRtZXRhWydsYWJlbCddLCAkc2VhcmNoKSE9PWZhbHNlKSB7DQoNCiAgICAgICAgICAgICAgICAkbGlzdFtdID0gWw0KICAgICAgICAgICAgICAgICAgICAnaWNvbicgID0+ICdpbmJveCcsDQogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gJG1ldGFbJ2xhYmVsJ10gPyAkbWV0YVsnbGFiZWwnXSA6ICRtZXRhWyduYW1lJ10sDQogICAgICAgICAgICAgICAgICAgICd1cmwnICAgPT4gJHRoaXMtPnJvdXRlVXJsKCcvZm9ybXMvZW50cmllcy8nLiRtZXRhWyduYW1lJ10pDQogICAgICAgICAgICAgICAgXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0pOw0KDQoNCiAgICAvLyBkYXNoYm9hcmQgd2lkZ2V0cw0KICAgICR0aGlzLT5vbignYWRtaW4uZGFzaGJvYXJkLndpZGdldHMnLCBmdW5jdGlvbigkd2lkZ2V0cykgew0KDQogICAgICAgICRmb3JtcyA9ICR0aGlzLT5tb2R1bGUoJ2Zvcm1zJyktPmZvcm1zKGZhbHNlKTsNCg0KICAgICAgICAkd2lkZ2V0c1tdID0gWw0KICAgICAgICAgICAgJ25hbWUnICAgID0+ICdmb3JtcycsDQogICAgICAgICAgICAnY29udGVudCcgPT4gJHRoaXMtPnZpZXcoJ2Zvcm1zOnZpZXdzL3dpZGdldHMvZGFzaGJvYXJkLnBocCcsIGNvbXBhY3QoJ2Zvcm1zJykpLA0KICAgICAgICAgICAgJ2FyZWEnICAgID0+ICdhc2lkZS1sZWZ0Jw0KICAgICAgICBdOw0KDQogICAgfSwgMTAwKTsNCg0KICAgIC8vIHJlZ2lzdGVyIGV2ZW50cyBmb3IgYXV0b2NvbXBsZXRlDQogICAgJHRoaXMtPm9uKCdjb2NrcGl0LndlYmhvb2suZXZlbnRzJywgZnVuY3Rpb24oJHRyaWdnZXJzKSB7DQoNCiAgICAgICAgZm9yZWFjaChbDQogICAgICAgICAgICAnZm9ybXMuc2F2ZS5hZnRlcicsDQogICAgICAgICAgICAnZm9ybXMuc2F2ZS5hZnRlci57JG5hbWV9JywNCiAgICAgICAgICAgICdmb3Jtcy5zYXZlLmJlZm9yZScsDQogICAgICAgICAgICAnZm9ybXMuc2F2ZS5iZWZvcmUueyRuYW1lfScsDQogICAgICAgICAgICAnZm9ybXMuc3VibWl0LmFmdGVyJywNCiAgICAgICAgICAgICdmb3Jtcy5zdWJtaXQuYmVmb3JlJywNCiAgICAgICAgXSBhcyAmJGV2dCkgeyAkdHJpZ2dlcnNbXSA9ICRldnQ7IH0NCiAgICB9KTsNCg0KfSk7DQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";