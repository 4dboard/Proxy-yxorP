1688053752
waR3U4bTeM%3A1295b889ee2f8b98f35c7365e27a74eb-316df7b9fadc3160ecf90006564f8d3e
s:5336:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjMxNmRmN2I5ZmFkYzMxNjBlY2Y5MDAwNjU2NGY4ZDNlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6IlJlcXVpcmVkVmFsaWRhdG9yLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjEwNzoidmVuZG9yL3BocGRvY3VtZW50b3IvcGhwZG9jdW1lbnRvci9zcmMvcGhwRG9jdW1lbnRvci9QbHVnaW4vQ29yZS9EZXNjcmlwdG9yL1ZhbGlkYXRvci9SZXF1aXJlZFZhbGlkYXRvci5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjMwMDQ6Ijw/cGhwCi8vLyoqCi8vICogRmlsZSBjb250YWlucyB0aGUKLy8gKiBccGhwRG9jdW1lbnRvclxQbHVnaW5cQ29yZVxEZXNjcmlwdG9yXFZhbGlkYXRvclxSZXF1aXJlZFZhbGlkYXRvciBjbGFzcy4KLy8gKgovLyAqIFBIUCBWZXJzaW9uIDUKLy8gKgovLyAqIEBjYXRlZ29yeSAgIHBocERvY3VtZW50b3IKLy8gKiBAcGFja2FnZSAgICBQYXJzZXIKLy8gKiBAc3VicGFja2FnZSBEb2NCbG9ja19WYWxpZGF0b3JzCi8vICogQGF1dGhvciAgICAgQmVuIFNlbGJ5IDxiZW5tYXRzZWxieUBnbWFpbC5jb20+Ci8vICogQGF1dGhvciAgICAgTWlrZSB2YW4gUmllbCA8bWlrZS52YW5yaWVsQG5hZW5pdXMuY29tPgovLyAqIEBjb3B5cmlnaHQgIDIwMTAtMjAxMSBNaWtlIHZhbiBSaWVsIC8gTmFlbml1cy4gKGh0dHA6Ly93d3cubmFlbml1cy5jb20pCi8vICogQGxpY2Vuc2UgICAgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAgTUlUCi8vICogQGxpbmsgICAgICAgaHR0cDovL3BocGRvYy5vcmcKLy8gKi8KLy8KLy9uYW1lc3BhY2UgcGhwRG9jdW1lbnRvclxQbHVnaW5cQ29yZVxEZXNjcmlwdG9yXFZhbGlkYXRvcjsKLy8KLy8vKioKLy8gKiBUaGlzIGNsYXNzIGlzIHJlc3BvbnNpYmxlIGZvciB2YWxpZGF0aW5nIHdoaWNoIHRhZ3MgYXJlIHJlcXVpcmVkCi8vICogYXMgZGVmaW5lZCBpbiAvc3JjL3BocERvY3VtZW50b3IvUGx1Z2luL0NvcmUvcGx1Z2luLnhtbAovLyAqCi8vICogQGNhdGVnb3J5ICAgcGhwRG9jdW1lbnRvcgovLyAqIEBwYWNrYWdlICAgIFBhcnNlcgovLyAqIEBzdWJwYWNrYWdlIERvY0Jsb2NrX1ZhbGlkYXRvcnMKLy8gKiBAYXV0aG9yICAgICBCZW4gU2VsYnkgPGJlbm1hdHNlbGJ5QGdtYWlsLmNvbT4KLy8gKiBAYXV0aG9yICAgICBNaWtlIHZhbiBSaWVsIDxtaWtlLnZhbnJpZWxAbmFlbml1cy5jb20+Ci8vICogQGNvcHlyaWdodCAgMjAxMC0yMDExIE1pa2UgdmFuIFJpZWwgLyBOYWVuaXVzLiAoaHR0cDovL3d3dy5uYWVuaXVzLmNvbSkKLy8gKiBAbGljZW5zZSAgICBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocCBNSVQKLy8gKiBAbGluayAgICAgICBodHRwOi8vcGhwZG9jLm9yZwovLyAqLwovL2NsYXNzIFJlcXVpcmVkVmFsaWRhdG9yIGV4dGVuZHMgVmFsaWRhdG9yQWJzdHJhY3QKLy97Ci8vICAgIC8qKgovLyAgICAgKiBJcyB0aGUgZG9jYmxvY2sgdmFsaWQgYmFzZWQgb24gdGhlIHJ1bGVzIGRlZmluZWQgaW4gcGx1Z2luLnhtbAovLyAgICAgKgovLyAgICAgKiA8b3B0aW9ucz4KLy8gICAgICogICA8b3B0aW9uIG5hbWU9ImRlcHJlY2F0ZWQiPgovLyAgICAgKiAgICAgIDx0YWcgbmFtZT0iZGVwcmVjYXRlZCIgLz4KLy8gICAgICogICAgICA8dGFnIG5hbWU9ImFjY2VzcyIgLz4KLy8gICAgICogICA8L29wdGlvbj4KLy8gICAgICogICA8b3B0aW9uIG5hbWU9InJlcXVpcmVkIj4KLy8gICAgICogICAgIDx0YWcgbmFtZT0icGFja2FnZSI+Ci8vICAgICAqICAgICAgIDxlbGVtZW50PnBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGaWxlUmVmbGVjdG9yPC9lbGVtZW50PgovLyAgICAgKiAgICAgICA8ZWxlbWVudD5waHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cQ2xhc3NSZWZsZWN0b3I8L2VsZW1lbnQ+Ci8vICAgICAqICAgICA8L3RhZz4KLy8gICAgICogICAgIDx0YWcgbmFtZT0ic3VicGFja2FnZSI+Ci8vICAgICAqICAgICAgIDxlbGVtZW50PnBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGaWxlUmVmbGVjdG9yPC9lbGVtZW50PgovLyAgICAgKiAgICAgICA8ZWxlbWVudD5waHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cQ2xhc3NSZWZsZWN0b3I8L2VsZW1lbnQ+Ci8vICAgICAqICAgICA8L3RhZz4KLy8gICAgICogICA8L29wdGlvbj4KLy8gICAgICogPC9vcHRpb25zPgovLyAgICAgKgovLyAgICAgKiBAc2VlIFZhbGlkYXRvckFic3RyYWN0Ojppc1ZhbGlkKCkKLy8gICAgICoKLy8gICAgICogQHJldHVybiB2b2lkCi8vICAgICAqLwovLyAgICBwdWJsaWMgZnVuY3Rpb24gaXNWYWxpZCgpCi8vICAgIHsKLy8gICAgICAgICRkb2NUeXBlID0gZ2V0X2NsYXNzKCR0aGlzLT5zb3VyY2UpOwovLyAgICAgICAgaWYgKGlzc2V0KCR0aGlzLT5vcHRpb25zWydyZXF1aXJlZCddWyRkb2NUeXBlXSkpIHsKLy8gICAgICAgICAgICAkdGhpcy0+dmFsaWRhdGVUYWdzKCRkb2NUeXBlKTsKLy8gICAgICAgIH0gZWxzZWlmIChpc3NldCgkdGhpcy0+b3B0aW9uc1sncmVxdWlyZWQnXVsnX19BTExfXyddKSkgewovLyAgICAgICAgICAgICR0aGlzLT52YWxpZGF0ZVRhZ3MoJ19fQUxMX18nKTsKLy8gICAgICAgIH0KLy8gICAgfQovLwovLyAgICAvKioKLy8gICAgICogVmFsaWRhdGUgdGhlIHRhZ3MgYmFzZWQgb24gdGhlIHR5cGUgb2YgZG9jYmxvY2sgYmVpbmcKLy8gICAgICogcGFyc2VkIGV0YwovLyAgICAgKgovLyAgICAgKiBAcGFyYW0gc3RyaW5nICRrZXkgQWNjZXNzIGtleSB0byAkdGhpcy0+b3B0aW9uc1sncmVxdWlyZWQnXQovLyAgICAgKgovLyAgICAgKiBAcmV0dXJuIHZvaWQKLy8gICAgICovCi8vICAgIHByb3RlY3RlZCBmdW5jdGlvbiB2YWxpZGF0ZVRhZ3MoJGtleSkKLy8gICAgewovLyAgICAgICAgZm9yZWFjaCAoJHRoaXMtPm9wdGlvbnNbJ3JlcXVpcmVkJ11bJGtleV0gYXMgJHRhZykgewovLyAgICAgICAgICAgIGlmIChjb3VudCgkdGhpcy0+ZG9jYmxvY2stPmdldFRhZ3NCeU5hbWUoJHRhZykpID09IDApIHsKLy8gICAgICAgICAgICAgICAgJHRoaXMtPmxvZ1BhcnNlckVycm9yKAovLyAgICAgICAgICAgICAgICAgICAgJ0NSSVRJQ0FMJywKLy8gICAgICAgICAgICAgICAgICAgICdQUEM6RVJSLTUwMDIwJywKLy8gICAgICAgICAgICAgICAgICAgICR0aGlzLT5saW5lTnVtYmVyLAovLyAgICAgICAgICAgICAgICAgICAgYXJyYXkoJHRhZywgJHRoaXMtPmVudGl0eU5hbWUpCi8vICAgICAgICAgICAgICAgICk7Ci8vICAgICAgICAgICAgfQovLyAgICAgICAgfQovLyAgICB9Ci8vfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";