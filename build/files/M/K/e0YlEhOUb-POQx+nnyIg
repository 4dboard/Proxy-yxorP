1687719696
waR3U4bTeM%3A24deecd00e476b3f4c46b0703e7f1430-1ec984e1f03ec73cbae6b4a03622d224
s:7988:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTM6InBocERvY3VtZW50b3IiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTU6IlBIUCBWZXJzaW9uIDUuMyI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjM6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6OToiY29weXJpZ2h0IjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo1ODoiMjAxMC0yMDE0IE1pa2UgdmFuIFJpZWwgLyBOYWVuaXVzIChodHRwOi8vd3d3Lm5hZW5pdXMuY29tKSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6NzoibGljZW5zZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NTQ6Imh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwIE1JVCI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xMaW5rIjozOntzOjc6IgAqAG5hbWUiO3M6NDoibGluayI7czoxNDoiACoAZGVzY3JpcHRpb24iO047czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXExpbmsAbGluayI7czoxNzoiaHR0cDovL3BocGRvYy5vcmciO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjFlYzk4NGUxZjAzZWM3M2NiYWU2YjRhMDM2MjJkMjI0IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NjoiZW4ucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NzU6InZlbmRvci9waHBkb2N1bWVudG9yL3BocGRvY3VtZW50b3Ivc3JjL3BocERvY3VtZW50b3IvUGFyc2VyL01lc3NhZ2VzL2VuLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzI3OToiPD9waHAKLyoqCiAqIHBocERvY3VtZW50b3IKICoKICogUEhQIFZlcnNpb24gNS4zCiAqCiAqIEBjb3B5cmlnaHQgMjAxMC0yMDE0IE1pa2UgdmFuIFJpZWwgLyBOYWVuaXVzIChodHRwOi8vd3d3Lm5hZW5pdXMuY29tKQogKiBAbGljZW5zZSAgIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwIE1JVAogKiBAbGluayAgICAgIGh0dHA6Ly9waHBkb2Mub3JnCiAqLwoKcmV0dXJuIGFycmF5KAogICAgLy8gRmlsZTogcGhwRG9jdW1lbnRvclxQYXJzZXJcQ29tbWFuZFxQcm9qZWN0XFBhcnNlQ29tbWFuZCAoUFBDUFApCiAgICAnUFBDUFAtREVTQ1JJUFRJT04nID0+ICdDcmVhdGVzIGEgc3RydWN0dXJlIGZpbGUgZnJvbSB5b3VyIHNvdXJjZSBjb2RlJywKICAgICdQUENQUC1IRUxQVEVYVCcgPT4gPDw8SEVMUApUaGUgcGFyc2UgdGFzayB1c2VzIHRoZSBzb3VyY2UgZmlsZXMgZGVmaW5lZCBlaXRoZXIgYnkgLWYgb3IgLWQgb3B0aW9ucyBhbmQKZ2VuZXJhdGVzIGNhY2hlIGZpbGVzIGF0IHRoZSB0YXJnZXQgbG9jYXRpb24uCkhFTFAKLAogICAgLy8gUGFyYW1ldGVyIGRlc2NyaXB0aW9ucwogICAgJ1BQQ1BQOk9QVC1GSUxFTkFNRScgICAgICAgICAgID0+ICdDb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBmaWxlcyB0byBwYXJzZS4gVGhlIHdpbGRjYXJkcyA/IGFuZCAqIGFyZSBzdXBwb3J0ZWQnLAogICAgJ1BQQ1BQOk9QVC1ESVJFQ1RPUlknICAgICAgICAgID0+ICdDb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBkaXJlY3RvcmllcyB0byAocmVjdXJzaXZlbHkpIHBhcnNlJywKICAgICdQUENQUDpPUFQtVEFSR0VUJyAgICAgICAgICAgICA9PiAnUGF0aCB3aGVyZSB0byBzdG9yZSB0aGUgY2FjaGUgKG9wdGlvbmFsKScsCiAgICAnUFBDUFA6T1BULUVOQ09ESU5HJyAgICAgICAgICAgPT4gJ0VuY29kaW5nIHRvIGJlIHVzZWQgdG8gaW50ZXJwcmV0IHNvdXJjZSBmaWxlcyB3aXRoJywKICAgICdQUENQUDpPUFQtRVhURU5TSU9OUycgICAgICAgICA9PiAnQ29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgZXh0ZW5zaW9ucyB0byBwYXJzZSwgZGVmYXVsdHMgdG8gcGhwLCBwaHAzIGFuZCBwaHRtbCcsCiAgICAnUFBDUFA6T1BULUlHTk9SRScgICAgICAgICAgICAgPT4gJ0NvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIGZpbGUocykgYW5kIGRpcmVjdG9yaWVzIHRoYXQgd2lsbCBiZSBpZ25vcmVkLiAnCiAgICAgICAgLiAnV2lsZGNhcmRzICogYW5kID8gYXJlIHN1cHBvcnRlZCcsCiAgICAnUFBDUFA6T1BULUlHTk9SRVRBR1MnICAgICAgICAgPT4gJ0NvbW1hLXNlcGFyYXRlZCBsaXN0IG9mIHRhZ3MgdGhhdCB3aWxsIGJlIGlnbm9yZWQsIGRlZmF1bHRzIHRvIG5vbmUuIHBhY2thZ2UsICcKICAgICAgICAuICdzdWJwYWNrYWdlIGFuZCBpZ25vcmUgbWF5IG5vdCBiZSBpZ25vcmVkLicsCiAgICAnUFBDUFA6T1BULUhJRERFTicgICAgICAgICAgICAgPT4gJ1VzZSB0aGlzIG9wdGlvbiB0byB0ZWxsIHBocERvY3VtZW50b3IgdG8gcGFyc2UgZmlsZXMgYW5kIGRpcmVjdG9yaWVzIHRoYXQgYmVnaW4gJwogICAgICAgIC4gJ3dpdGggYSBwZXJpb2QgKC4pLCBieSBkZWZhdWx0IHRoZXNlIGFyZSBpZ25vcmVkJywKICAgICdQUENQUDpPUFQtSUdOT1JFU1lNTElOS1MnICAgICA9PiAnSWdub3JlIHN5bWxpbmtzIHRvIG90aGVyIGZpbGVzIG9yIGRpcmVjdG9yaWVzLCBkZWZhdWx0IGlzIG9uJywKICAgICdQUENQUDpPUFQtTUFSS0VSUycgICAgICAgICAgICA9PiAnQ29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgbWFya2Vycy90YWdzIHRvIGZpbHRlcicsCiAgICAnUFBDUFA6T1BULVRJVExFJyAgICAgICAgICAgICAgPT4gJ1NldHMgdGhlIHRpdGxlIGZvciB0aGlzIHByb2plY3Q7IGRlZmF1bHQgaXMgdGhlIHBocERvY3VtZW50b3IgbG9nbycsCiAgICAnUFBDUFA6T1BULUZPUkNFJyAgICAgICAgICAgICAgPT4gJ0ZvcmNlcyBhIGZ1bGwgYnVpbGQgb2YgdGhlIGRvY3VtZW50YXRpb24sIGRvZXMgbm90IGluY3JlbWVudCBleGlzdGluZyAnCiAgICAgICAgLiAnZG9jdW1lbnRhdGlvbicsCiAgICAnUFBDUFA6T1BULVZBTElEQVRFJyAgICAgICAgICAgPT4gJ1ZhbGlkYXRlcyBldmVyeSBwcm9jZXNzZWQgZmlsZSB1c2luZyBQSFAgTGludCwgY29zdHMgYSBsb3Qgb2YgcGVyZm9ybWFuY2UnLAogICAgJ1BQQ1BQOk9QVC1WSVNJQklMSVRZJyAgICAgICAgID0+ICdTcGVjaWZpZXMgdGhlIHBhcnNlIHZpc2liaWxpdHkgdGhhdCBzaG91bGQgYmUgZGlzcGxheWVkIGluIHRoZSBkb2N1bWVudGF0aW9uICcKICAgICAgICAuICcoY29tbWEgc2VwYXJhdGVkIGUuZy4gInB1YmxpYyxwcm90ZWN0ZWQiKScsCiAgICAnUFBDUFA6T1BULURFRkFVTFRQQUNLQUdFTkFNRScgPT4gJ05hbWUgdG8gdXNlIGZvciB0aGUgZGVmYXVsdCBwYWNrYWdlLicsCiAgICAnUFBDUFA6T1BULVNPVVJDRUNPREUnICAgICAgICAgPT4gJ1doZXRoZXIgdG8gaW5jbHVkZSBzeW50YXggaGlnaGxpZ2h0ZWQgc291cmNlIGNvZGUnLAogICAgJ1BQQ1BQOk9QVC1QUk9HUkVTU0JBUicgICAgICAgID0+ICdXaGV0aGVyIHRvIHNob3cgYSBwcm9ncmVzcyBiYXI7IHdpbGwgYXV0b21hdGljYWxseSBxdWlldCBsb2dnaW5nIHRvIHN0ZG91dCcsCiAgICAnUFBDUFA6T1BULVBBUlNFUFJJVkFURScgICAgICAgPT4gJ1doZXRoZXIgdG8gcGFyc2UgRG9jQmxvY2tzIG1hcmtlZCB3aXRoIEBpbnRlcm5hbCB0YWcnLAoKICAgIC8vIExvZyBhbmQgZXhjZXB0aW9uIG1lc3NhZ2VzCiAgICAnUFBDUFA6TE9HLUNPTExFQ1RJTkcnICAgPT4gJ0NvbGxlY3RpbmcgZmlsZXMgLi4gJywKICAgICdQUENQUDpMT0ctT0snICAgICAgICAgICA9PiAnT0snLAogICAgJ1BQQ1BQOkxPRy1JTklUSUFMSVpJTkcnID0+ICdJbml0aWFsaXppbmcgcGFyc2VyIC4uICcsCiAgICAnUFBDUFA6TE9HLVBBUlNJTkcnICAgICAgPT4gJ1BhcnNpbmcgZmlsZXMnLAogICAgJ1BQQ1BQOkxPRy1TVE9SRUNBQ0hFJyAgID0+ICdTdG9yaW5nIGNhY2hlIGluICIlcyIgLi4gJywKICAgICdQUENQUDpFWEMtTk9GSUxFUycgICAgICA9PiAnTm8gcGFyc2FibGUgZmlsZXMgd2VyZSBmb3VuZCwgZGlkIHlvdSBzcGVjaWZ5IGFueSB1c2luZyB0aGUgLWYgb3IgLWQgcGFyYW1ldGVyPycsCiAgICAnUFBDUFA6RVhDLUJBRFRBUkdFVCcgICAgPT4gJ1RoZSBwcm92aWRlZCB0YXJnZXQgbG9jYXRpb24gbXVzdCBiZSBhIGRpcmVjdG9yeScsCiAgICAnUFBDUFA6RVhDLU5PUEFSVElBTCcgICAgPT4gJ1BhcnRpYWwgIiVzIiBub3QgcmVhZGFibGUgb3IgZm91bmQuJywKKTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";