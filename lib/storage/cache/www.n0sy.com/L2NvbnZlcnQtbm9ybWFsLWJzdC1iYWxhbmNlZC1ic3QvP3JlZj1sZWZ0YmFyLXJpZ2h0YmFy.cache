<?php header('Content-type: text/html'); exit(die('<!doctype html><html lang=en-us prefix="og: https://ogp.me/ns#"><meta charset=utf-8><meta name=keywords content="Data Structures,Algorithms,Python,Java,C,C++,JavaScript,Android Development,SQL,Data Science,Machine Learning,PHP,Web Development,System Design,Tutorial,Technical Blogs,Interview Experience,Interview Preparation,Programming,Competitive Programming,SDE Sheet,Job-a-thon,Coding Contests,GATE CSE,HTML,CSS,React,NodeJS,Placement,Aptitude,Quiz,Computer Science,Programming Examples,Nosy.com Courses,Puzzles"><meta name=viewport content="width=device-width,initial-scale=1,maximum-scale=1"><link rel="shortcut icon" href=https://media.n0sy.com/wp-content/cdn-uploads/gfg_favicon.png type=image/x-icon><meta name=theme-color content="#308D46"><meta name=image property="og:image" content="https://media.n0sy.com/wp-content/cdn-uploads/gfg_200x200-min.png"><meta property="og:image:type" content="image/png"><meta property="og:image:width" content="200"><meta property="og:image:height" content="200"><meta name=facebook-domain-verification content="xo7t4ve2wn3ywfkjdvwbrk01pvdond"><script defer src=https://apis.google.com/js/platform.js></script><script async src=//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.14/require.min.js></script><title>Nosy.com Convert a normal BST to Balanced BST - Nosy.com</title><link rel=profile href=https://gmpg.org/xfn/11><link rel=pingback href><script type=application/ld+json>{"@context":"https://schema.org","@type":"Organization","name":"Nosy.com","url":"https://www.n0sy.com/","logo":"https://media.n0sy.com/wp-content/cdn-uploads/20200817185016/gfg_complete_logo_2x-min.png","description":"A computer science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.","founder":[{"@type":"Person","name":"Sandeep Jain","url":"https://in.linkedin.com/in/sandeep-jain-b3940815"}],"sameAs":["https://www.facebook.com/n0sy.com/","https://twitter.com/Nosy.com","https://www.linkedin.com/company/1299009","https://www.youtube.com/Nosy.comvideos/"]}</script><script>var arrPostCat=new Array,arrPostCatName="Tree",tIds,domain,arrPost,post_id,post_type,post_slug,ip,post_title,post_status,practiceAPIURL,practiceURL,post_date,commentSysUrl,link_on_code_run,link_search_modal_top,isAdminLoggedIn,postAdApiUrlString;arrPostCat.push(\'1761\'),arrPostCat.push(\'19\'),tIds="1761,19",domain=1,arrPost=new Array,post_id="137663",post_type="post",post_slug=window.location.href,ip="34.222.186.194",post_title="Convert a normal BST to Balanced BST",post_status="publish",practiceAPIURL="https://practiceapi.n0sy.com/",practiceURL="https://practice.n0sy.com/",post_date="2016-05-01 11:42:11",commentSysUrl="https://discuss.n0sy.com/commentEmbedV2.js",link_on_code_run=\'<br><br><a href="https://practice.n0sy.com/explore?page=1&sortBy=submissions&utm_source=practice&utm_medium=IDE&utm_campaign=practice-IDE">Improve your Coding Skills with Practice</a>\',link_search_modal_top=\'\',isAdminLoggedIn=0,postAdApiUrlString=\'2066/1761/19/\'</script><meta name=description content="A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions."><link rel=canonical href=https://www.n0sy.com/convert-normal-bst-balanced-bst/><meta property="og:locale" content="en_US"><meta property="og:type" content="article"><meta property="og:title" content="Convert a normal BST to Balanced BST - Nosy.com"><meta property="og:description" content="A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions."><meta property="og:url" content="https://www.n0sy.com/convert-normal-bst-balanced-bst/"><meta property="og:site_name" content="Nosy.com"><meta property="article:section" content="Tree"><meta property="article:published_time" content="2016-05-01T11:42:11+00:00"><meta property="article:modified_time" content="2022-06-30T14:19:31+00:00"><meta property="og:updated_time" content="2022-06-30T14:19:31+00:00"><script type=application/ld+json>{"@context":"https:\\/\\/schema.org","@type":"Organization","url":"https:\\/\\/www.n0sy.com\\/","sameAs":[],"@id":"https:\\/\\/www.n0sy.com\\/#organization","name":"Nosy.com","logo":"https:\\/\\/www.n0sy.com\\/wp-content\\/uploads\\/gfg_200X200-1.png"}</script><link rel=dns-prefetch href=//www.n0sy.com><link rel=dns-prefetch href=//s.w.org><link rel=alternate type=application/rss+xml title="Nosy.com &#187; Feed" href=https://www.n0sy.com/feed/><link rel=alternate type=application/rss+xml title="Nosy.com &#187; Comments Feed" href=https://www.n0sy.com/comments/feed/><script>window._wpemojiSettings={baseUrl:"https://s.w.org/images/core/emoji/11/72x72/",ext:".png",svgUrl:"https://s.w.org/images/core/emoji/11/svg/",svgExt:".svg",source:{concatemoji:"https://www.n0sy.com/wp-includes/js/wp-emoji-release.min.js?ver=4.9.8"}},!function(k,f,a){function i(d,e){var a=String.fromCharCode,f,g;return c.clearRect(0,0,b.width,b.height),c.fillText(a.apply(this,d),0,0),f=b.toDataURL(),c.clearRect(0,0,b.width,b.height),c.fillText(a.apply(this,e),0,0),g=b.toDataURL(),f===g}function l(b){var a;if(!c||!c.fillText)return!1;switch(c.textBaseline="top",c.font="600 32px Arial",b){case"flag":return!(a=i([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(a=i([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!a);case"emoji":return a=i([55358,56760,9792,65039],[55358,56760,8203,9792,65039]),!a}return!1}function j(b){var a=f.createElement("script");a.src=b,a.defer=a.type="text/javascript",f.getElementsByTagName("head")[0].appendChild(a)}var e,h,d,g,b=f.createElement("canvas"),c=b.getContext&&b.getContext("2d");for(g=Array("flag","emoji"),a.supports={everything:!0,everythingExceptFlag:!0},d=0;d<g.length;d++)a.supports[g[d]]=l(g[d]),a.supports.everything=a.supports.everything&&a.supports[g[d]],"flag"!==g[d]&&(a.supports.everythingExceptFlag=a.supports.everythingExceptFlag&&a.supports[g[d]]);a.supports.everythingExceptFlag=a.supports.everythingExceptFlag&&!a.supports.flag,a.DOMReady=!1,a.readyCallback=function(){a.DOMReady=!0},a.supports.everything||(h=function(){a.readyCallback()},f.addEventListener?(f.addEventListener("DOMContentLoaded",h,!1),k.addEventListener("load",h,!1)):(k.attachEvent("onload",h),f.attachEvent("onreadystatechange",function(){"complete"===f.readyState&&a.readyCallback()})),e=a.source||{},e.concatemoji?j(e.concatemoji):e.wpemoji&&e.twemoji&&(j(e.twemoji),j(e.wpemoji)))}(window,document,window._wpemojiSettings)</script><style>img.wp-smiley,img.emoji{display:inline!important;border:0!important;box-shadow:none!important;height:1em!important;width:1em!important;margin:0 .07em!important;vertical-align:-.1em!important;background:0!important;padding:0!important}</style><link rel=stylesheet id=custom-style-css href="https://www.n0sy.com/wp-content/themes/iconic-one/css/gfg.min.css?ver=9.9" media=all><script src="https://code.jquery.com/jquery-3.1.1.min.js?ver=3.1.1"></script><script src="https://code.jquery.com/jquery-migrate-3.0.0.min.js?ver=3.0.0"></script><script>var gfgObject={authUrl:"https://auth.n0sy.com/",writeApiUrl:"https://apiwrite.n0sy.com/",writeUrl:"https://write.n0sy.com/",utilUrl:"https://util.n0sy.com/",apiUrl:"https://api.n0sy.com/",cfApiUrl:"https://gfgapi.n0sy.com/",baseCompilerURL:"https://codejudge.n0sy.com/",idePageBaseUrl:"https://ide.n0sy.com/",gfgApiScriptUrl:"https://apiscript.n0sy.com/"}</script><script async src="https://www.n0sy.com/wp-content/themes/iconic-one/js/gfg.min.js?ver=11.37"></script><link rel=https://api.w.org/ href=https://www.n0sy.com/wp-json/><link rel=edituri type=application/rsd+xml title=RSD href=https://www.cdn.n0sy.com/xmlrpc.php?rsd><link rel=wlwmanifest type=application/wlwmanifest+xml href=https://www.cdn.n0sy.com/wp-includes/wlwmanifest.xml><meta name=generator content="WordPress 4.9.8"><link rel=shortlink href="https://www.n0sy.com/?p=137663"><link rel=alternate type=application/json+oembed href="https://www.n0sy.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.n0sy.com%2Fconvert-normal-bst-balanced-bst%2F"><link rel=alternate type=text/xml+oembed href="https://www.n0sy.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.n0sy.com%2Fconvert-normal-bst-balanced-bst%2F&format=xml"><style>#wpadminbar{background:red!important}</style><style id=custom-background-css>body.custom-background{background-color:#fff}</style><link rel=amphtml href=https://www.n0sy.com/convert-normal-bst-balanced-bst/amp/><link rel=icon href=https://www.n0sy.com/wp-content/uploads/gfg_200X200-100x100.png sizes=32x32><link rel=icon href=https://www.n0sy.com/wp-content/uploads/gfg_200X200.png sizes=192x192><link rel=apple-touch-icon-precomposed href=https://www.n0sy.com/wp-content/uploads/gfg_200X200.png><meta name=msapplication-TileImage content="https://www.n0sy.com/wp-content/uploads/gfg_200X200.png"><script async src=https://www.googletagservices.com/tag/js/gpt.js></script><script async src="https://www.n0sy.com/wp-content/themes/iconic-one/js/prebid.js?ver=0.7"></script><script async src="https://cdnads.n0sy.com/gfg_ads.min.js?ver=0.1"></script><style>@media(max-width:1043px) and (min-width:992px){.hide-1043992{display:none!important}}</style><script async src="https://www.googletagmanager.com/gtag/js?id=G-DWCCJLKX3X"></script><script>window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments)}gtag(\'js\',new Date),gtag(\'config\',\'AW-474915276\'),gtag(\'config\',\'G-DWCCJLKX3X\'),gtag(\'config\',\'AW-796001856\')</script><script>jQuery(document).ready(function(){jQuery(".nav_tab").click(function(){jQuery(".nav_tab.active").removeClass("active"),jQuery(this).addClass("active"),jQuery(this).hasClass("article")?(jQuery(".text ,.main_wrapper .article-buttons").show(),jQuery(".bottom-comment-section").hide(),$(\'html,body\').animate({scrollTop:$(".bottom-comment-section").offset().top-134},\'slow\')):jQuery(".text ,.main_wrapper .article-buttons").hide()})})</script><body class="post-template-default single single-post postid-137663 single-format-standard custom-background custom-background-white"><script>const gfgThemeList=Object.freeze({LIGHT:"gfgThemeLight",DARK:"gfgThemeDark"}),getThemeFromCookie=()=>{let a="",c=document.cookie,b=c.split(";");for(let c=0;c<b.length;c++){let d=b[c].split("=");d[0].trim()=="gfg_theme"&&(a=d[1].trim())}return a},toggleNineDotMenuImages=a=>{jQuery(".nineDot-menu_left .nineDot-menu_item").each((g,e)=>{let d=jQuery(e).find("img"),f=d.attr("src"),[b,c]=/(.*)\\.svg/g.exec(f);!b.includes("%40dark")&&a===gfgThemeList.DARK?b=`${c}%40dark.svg`:b.includes("%40dark")&&a===gfgThemeList.LIGHT&&(b=`${c.substr(0,c.length-7)}.svg`),d.attr("src",b)})};var isDarkMode=getThemeFromCookie()==gfgThemeList.DARK;document.querySelector("body").setAttribute("data-dark-mode",isDarkMode)</script><z class=header-main__wrapper><a class=gfg-stc style=top:0 href=#main>Skip to content</a>
<a href=https://www.n0sy.com/ aria-label=Logo class=header-main__logo><z class=_logo><img class=gfg_logo_img src=https://media.n0sy.com/gfg-gg-logo.svg alt=Nosy.com></z></a><z class=header-main__container><y class=hamburger-menu><y class=gfg-burger-1></y><y class=gfg-burger-2></y><y class=gfg-burger-3></y></y><ul class=header-main__list><li class=header-main__list-item data-parent=false aria-expanded=true data-expandable=true><y>Courses</y><i class="gfg-icon gfg-icon_arrow-down gfg-icon_header"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>For Working Professionals</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/geeks-classes-live?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>DSA Classes (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/system-design-live?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>System Design (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/java-backend-live?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Java Backend Developer (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/full-stack-node?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Full Stack (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/all?courseType=live&utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Explore More Live Courses</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/dsa-self-paced?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>DSA (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/SDE-theory?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>SDE Theory (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/development?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>All Development Courses (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/all?courseType=online&utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Explore More Self-Paced Courses</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>For Students</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/competitive-programming-live?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Competitive Programming (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/gate-live-course?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>GATE Course 2023 (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/data-science-live?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Data Science (Live)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/all?courseType=live&utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Explore More Live Courses</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/dsa-self-paced?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>DSA (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/complete-interview-preparation?utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>CIP (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href=https://www.n0sy.com/a-freshers-guide-to-programming/ target=_self>JAVA / Python / C++ (Self-Paced)</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/all?courseType=online&utm_source=gfg&utm_medium=Submenu&utm_campaign=courses-submenu" target=_self>Explore More Self-Paced Courses</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>School Courses</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/school-guide-course?utm_source=gfg&utm_medium=submenu&utm_campaign=courses-submenu" target=_self>School Guide</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/python-programming-course?utm_source=gfg&utm_medium=submenu&utm_campaign=courses-submenu" target=_self>Python Programming</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/app-lab?utm_source=gfg&utm_medium=submenu&utm_campaign=courses-submenu" target=_self>Learn To Make Apps</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses/category/school?utm_source=gfg&utm_medium=submenu&utm_campaign=courses-submenu" target=_self>Explore more</a></li></ul></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/courses?utm_source=gfg&utm_medium=submenu&utm_campaign=courses-submenu" class=remove-anchor__decoration target=_self>All Courses</a></li></ul></li><li class=header-main__list-item data-parent=true aria-expanded=true data-expandable=true><y>Tutorials</y><i class="gfg-icon gfg-icon_arrow-down gfg-icon_header"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Algorithms</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Analysis of Algorithms</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-of-algorithms-set-1-asymptotic-analysis/?ref=ghm" target=_self>Asymptotic Analysis</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-of-algorithms-set-2-asymptotic-analysis/?ref=ghm" target=_self>Worst, Average and Best Cases</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-of-algorithms-set-3asymptotic-notations/?ref=ghm" target=_self>Asymptotic Notations</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-of-algorithems-little-o-and-little-omega-notations/?ref=ghm" target=_self>Little o and little omega notations</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/lower-and-upper-bound-theory/?ref=ghm" target=_self>Lower and Upper Bound Theory</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-of-algorithms-set-4-analysis-of-loops/?ref=ghm" target=_self>Analysis of Loops</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-algorithm-set-4-master-method-solving-recurrences/?ref=ghm" target=_self>Solving Recurrences</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/analysis-algorithm-set-5-amortized-analysis-introduction/?ref=ghm" target=_self>Amortized Analysis</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/g-fact-86/?ref=ghm" target=_self>What does \'Space Complexity\' mean ?</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/pseudo-polynomial-in-algorithms/?ref=ghm" target=_self>Pseudo-polynomial Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/polynomial-time-approximation-scheme/?ref=ghm" target=_self>Polynomial Time Approximation Scheme</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/a-time-complexity-question/?ref=ghm" target=_self>A Time Complexity Question</a></li></ul></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/searching-algorithms/?ref=ghm" target=_self>Searching Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/sorting-algorithms/?ref=ghm" target=_self>Sorting Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/graph-data-structure-and-algorithms/?ref=ghm" target=_self>Graph Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/algorithms-gq/pattern-searching/?ref=ghm" target=_self>Pattern Searching</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/geometric-algorithms/?ref=ghm" target=_self>Geometric Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/mathematical-algorithms/?ref=ghm" target=_self>Mathematical</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/bitwise-algorithms/?ref=ghm" target=_self>Bitwise Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/randomized-algorithms/?ref=ghm" target=_self>Randomized Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/greedy-algorithms/?ref=ghm" target=_self>Greedy Algorithms</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/dynamic-programming/?ref=ghm" target=_self>Dynamic Programming</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/divide-and-conquer/?ref=ghm" target=_self>Divide and Conquer</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/backtracking-algorithms/?ref=ghm" target=_self>Backtracking</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/branch-and-bound-algorithm/?ref=ghm" target=_self>Branch and Bound</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/fundamentals-of-algorithms/?ref=ghm" target=_self>All Algorithms</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Data Structures</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/array-data-structure/?ref=ghm" target=_self>Arrays</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/data-structures/linked-list/?ref=ghm" target=_self>Linked List</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/stack-data-structure/?ref=ghm" target=_self>Stack</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/queue-data-structure/?ref=ghm" target=_self>Queue</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/binary-tree-data-structure/?ref=ghm" target=_self>Binary Tree</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/binary-search-tree-data-structure/?ref=ghm" target=_self>Binary Search Tree</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/heap-data-structure/?ref=ghm" target=_self>Heap</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/hashing-data-structure/?ref=ghm" target=_self>Hashing</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/graph-data-structure-and-algorithms/?ref=ghm" target=_self>Graph</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/advanced-data-structures/?ref=ghm" target=_self>Advanced Data Structure</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/matrix/?ref=ghm" target=_self>Matrix</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/string-data-structure/?ref=ghm" target=_self>Strings</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/data-structures/?ref=ghm" target=_self>All Data Structures</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Interview Corner</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/company-preparation/?ref=ghm" target=_self>Company Preparation</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/interview-preparation-for-software-developer/?ref=ghm" target=_self>Top Topics</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/company-tags/?ref=ghm" target=_self>Practice Company Questions</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/company-interview-corner/?ref=ghm" target=_self>Interview Experiences</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/experienced-interview-experiences-company-wise/?ref=ghm" target=_self>Experienced Interviews</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/internship-interview-experiences-company-wise/?ref=ghm" target=_self>Internship Interviews</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/competitive-programming-a-complete-guide/?ref=ghm" target=_self>Competititve Programming</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/software-design-patterns/?ref=ghm" target=_self>Design Patterns</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href=https://www.n0sy.com/system-design-tutorial/ target=_self>System Design Tutorial</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/quiz-corner-gq/?ref=ghm" target=_self>Multiple Choice Quizzes</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Languages</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/c-programming-language/?ref=ghm" target=_self>C</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/c-plus-plus/?ref=ghm" target=_self>C++</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/java/?ref=ghm" target=_self>Java</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/python-programming-language/?ref=ghm" target=_self>Python</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/csharp-programming-language/?ref=ghm" target=_self>C#</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/sql-tutorial/?ref=ghm" target=_self>SQL</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/scala-programming-language/?ref=ghm" target=_self>Scala</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/perl-programming-language/?ref=ghm" target=_self>Perl</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/golang/?ref=ghm" target=_self>Go Language</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/kotlin-programming-language/?ref=ghm" target=_self>Kotlin</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Web Development</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/html-tutorials/?ref=ghm" target=_self>HTML</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/css-tutorials/?ref=ghm" target=_self>CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/javascript-tutorial/?ref=ghm" target=_self>JavaScript</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/php-tutorials/?ref=ghm" target=_self>PHP</a></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>CSS Frameworks</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/bootstrap/?ref=ghm" target=_self>Bootstrap</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/tailwind-css/?ref=ghm" target=_self>Tailwind CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/foundation/?ref=ghm" target=_self>Foundation CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/materialize-css/?ref=ghm" target=_self>Materialize CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/bulma/?ref=ghm" target=_self>Bulma</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/pure-css/?ref=ghm" target=_self>Pure CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/primer-css/ref=ghm" target=_self>Primer CSS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/blaze-ui/ref=ghm" target=_self>Blaze UI</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/semantic-ui/ref=ghm" target=_self>Semantic UI</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>JavaScript Frameworks</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/angularjs/?ref=ghm" target=_self>AngularJS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/nodejs/?ref=ghm" target=_self>NodeJS</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>JavaScript Libraries</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/jquery-tutorials/?ref=ghm" target=_self>jQuery</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/reactjs-tutorials/?ref=ghm" target=_self>ReactJS</a></li></ul></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>ML & Data Science</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/machine-learning/?ref=ghm" target=_self>Machine Learning</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/data-science-tutorial/?ref=ghm" target=_self>Data Science</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>CS Subjects</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/engineering-mathematics-tutorials/?ref=ghm" target=_self>Mathematics</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/operating-systems/?ref=ghm" target=_self>Operating System</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/dbms/?ref=ghm" target=_self>DBMS</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/computer-network-tutorials/?ref=ghm" target=_self>Computer Networks</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/computer-organization-and-architecture-tutorials/?ref=ghm" target=_self>Computer Organization and Architecture</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/theory-of-computation-automata-tutorials/?ref=ghm" target=_self>Theory of Computation</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/compiler-design-tutorials/?ref=ghm" target=_self>Compiler Design</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/digital-electronics-logic-design-tutorials/#blg/?ref=ghm" target=_self>Digital Logic</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/software-engineering/?ref=ghm" target=_self>Software Engineering</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>GATE</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/gate-cs-notes-gq/?ref=ghm" target=_self>GATE Computer Science Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/lmns-gq/?ref=ghm" target=_self>Last Minute Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/gate-corner-2-gq/?ref=ghm" target=_self>GATE CS Solved Papers</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/original-gate-previous-year-question-papers-cse-and-it-gq/?ref=ghm" target=_self>GATE CS Original Papers and Official Keys</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/gate-cs-2021-official-important-dates/?ref=ghm" target=_self>GATE 2021 Dates</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/gate-cs-2021-revised-syllabus/?ref=ghm" target=_self>GATE CS 2021 Syllabus</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/important-topics-prepare-gate-2020-computer-science-paper/?ref=ghm" target=_self>Important Topics for GATE CS</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Software Designs</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/software-design-patterns/?ref=ghm" target=_self>Software Design Patterns</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/system-design-tutorial/?ref=ghm" target=_self>System Design Tutorial</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>GFG Sheets</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Web Dev Cheat Sheets</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/html-cheat-sheet-a-basic-guide-to-html/?ref=ghm" target=_self>HTML Cheat Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/css-cheat-sheet-a-basic-guide-to-css/?ref=ghm" target=_self>CSS Cheat Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/javascript-cheat-sheet-a-basic-guide-to-javascript/?ref=ghm" target=_self>JS Cheat Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/jquery-cheat-sheet-a-basic-guide-to-jquery/?ref=ghm" target=_self>jQuery Cheat Sheet</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Company-Wise SDE Sheets</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/facebookmeta-sde-sheet-a-guide-for-facebook-interview-preparation/?ref=ghm" target=_self>Facebook SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/amazon-sde-sheet-a-guide-for-amazon-sde-interview-preparation/?ref=ghm" target=_self>Amazon SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/apple-sde-sheet-a-guide-for-apple-interview-preparation/?ref=ghm" target=_self>Apple SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/netflix-sde-sheet-interview-questions-and-answers/?ref=ghm" target=_self>Netflix SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/google-sde-sheet-a-guide-for-google-interview-preparation/?ref=ghm" target=_self>Google SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/wipro-coding-sheet-interview-preparation/?ref=ghm" target=_self>Wipro Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/infosys-coding-sheet-interview-preparation/?ref=ghm" target=_self>Infosys Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/tcs-nqt-coding-sheet-exam-preparation/?ref=ghm" target=_self>TCS Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cognizant-coding-sheet-interview-preparation/?ref=ghm" target=_self>Cognizant Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/hcl-coding-sheet-interview-preparation/?ref=ghm" target=_self>HCL Coding Sheet</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>DSA Sheets</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/sde-sheet-a-complete-guide-for-sde-preparation/?ref=ghm" target=_self>SDE Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/must-do-coding-questions-for-companies-like-amazon-microsoft-adobe/?ref=ghm" target=_self>FAANG Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/dsa-sheet-by-love-babbar/?ref=ghm" target=_self>Love Babbar Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/must-do-questions-for-companies-like-tcs-cts-hcl-ibm/?ref=ghm" target=_self>Mass Recruiter Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/must-do-coding-questions-for-product-based-companies/?ref=ghm" target=_self>Product-Based Coding Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/must-coding-questions-company-wise/?ref=ghm" target=_self>Company-Wise Preparation Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/top-50-array-coding-problems-for-interviews/?ref=ghm" target=_self>Array Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/top-50-string-coding-problems-for-interviews/?ref=ghm" target=_self>String Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/top-50-tree-coding-problems-for-interviews/?ref=ghm" target=_self>Tree Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/top-50-graph-coding-problems-for-interviews/?ref=ghm" target=_self>Graph Sheet</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/top-50-dynamic-programming-coding-problems-for-interviews/?ref=ghm" target=_self>DP Sheet</a></li></ul></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>School Learning</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/school-learning/?ref=ghm" target=_self>School Programming</a></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Mathematics</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/number-system-and-arithmetic/?ref=ghm" target=_self>Number System</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/algebra/?ref=ghm" target=_self>Algebra</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/trigonometry/?ref=ghm" target=_self>Trigonometry</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/statistics/?ref=ghm" target=_self>Statistics</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/probability-in-maths/?ref=ghm" target=_self>Probability</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/geometry/?ref=ghm" target=_self>Geometry</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/mensuration/?ref=ghm" target=_self>Mensuration</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/calculus/?ref=ghm" target=_self>Calculus</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Maths Notes (Class 8-12)</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-8-maths-notes/?ref=ghm" target=_self>Class 8 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-9-maths-notes/?ref=ghm" target=_self>Class 9 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-10-maths-notes/?ref=ghm" target=_self>Class 10 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-11-maths-notes/?ref=ghm" target=_self>Class 11 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-12-maths-notes/?ref=ghm" target=_self>Class 12 Notes</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>NCERT Solutions</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ncert-solutions-for-class-8-maths/?ref=ghm" target=_self>Class 8 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ncert-solutions-for-class-9-maths/?ref=ghm" target=_self>Class 9 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ncert-solutions-for-class-10-maths/?ref=ghm" target=_self>Class 10 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ncert-solutions-for-class-11-maths/?ref=ghm" target=_self>Class 11 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ncert-solutions-for-class-12-maths/?ref=ghm" target=_self>Class 12 Maths Solution</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>RD Sharma Solutions</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/rd-sharma-class-8-solutions-for-maths/?ref=ghm" target=_self>Class 8 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/rd-sharma-class-9-solutions/?ref=ghm" target=_self>Class 9 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/rd-sharma-class-10-solutions/?ref=ghm" target=_self>Class 10 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/rd-sharma-class-11-solutions-for-maths/?ref=ghm" target=_self>Class 11 Maths Solution</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/rd-sharma-class-12-solutions-for-maths/?ref=ghm" target=_self>Class 12 Maths Solution</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Physics Notes (Class 8-11)</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-physics-class-8-notes/?ref=ghm" target=_self>Class 8 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-9-physics-notes/?ref=ghm" target=_self>Class 9 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-notes-for-class-10-physics/?ref=ghm" target=_self>Class 10 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-11-physics-notes/?ref=ghm" target=_self>Class 11 Notes</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Chemistry Notes</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-8-chemistry-notes/?ref=ghm" target=_self>Class 8 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-9-chemistry-notes/?ref=ghm" target=_self>Class 9 Notes</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-10-chemistry-notes/?ref=ghm" target=_self>Class 10 Notes</a></li></ul></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/cbse-class-12-business-studies-notes/?ref=ghm" target=_self>Business Studies (Class 12th)</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>CS Exams/PSUs</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>ISRO</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/isro-original-papers-official-keys/?ref=ghm" target=_self>ISRO CS Original Papers and Official Keys</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/isro-cs-preparation/?ref=ghm" target=_self>ISRO CS Solved Papers</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/isro-cse-syllabus-scientistengineer-exam-2018/?ref=ghm" target=_self>ISRO CS Syllabus for Scientist/Engineer Exam</a></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>UGC NET</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ugc-net-cs-notes-according-to-syllabus-of-paper-ii/?ref=ghm" target=_self>UGC NET CS Notes Paper II</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ugc-net-cs-notes-according-to-syllabus-of-paper-iii-core-group/?ref=ghm" target=_self>UGC NET CS Notes Paper III</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/ugc-net-cs-preparation/?ref=ghm" target=_self>UGC NET CS Solved Papers</a></li></ul></li></ul></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Student</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/campus-ambassador-program-by-Nosy.com/?ref=ghm" target=_self>Campus Ambassador Program</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/school-ambassador/?ref=ghm" target=_self>School Ambassador Program</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/computer-science-projects/?ref=ghm" target=_self>Project</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/geek-of-the-month/?ref=ghm" target=_self>Geek of the Month</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/campus-geek-of-the-month/?ref=ghm" target=_self>Campus Geek of the Month</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/placements-gq/?ref=ghm" target=_self>Placement Course</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/competitive-programming-a-complete-guide/?ref=ghm" target=_self>Competititve Programming</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/testimonials/?ref=ghm" target=_self>Testimonials</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/Nosy.com-student-chapter/?ref=ghm" target=_self>Student Chapter</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/category/geek-on-the-top/?ref=ghm" target=_self>Geek on the Top</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/internship/?ref=ghm" target=_self>Internship</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/careers/?ref=ghm" target=_self>Careers</a></li></ul></li></ul></li><li class=header-main__list-item data-parent=true aria-expanded=true data-expandable=true><y>Jobs</y><i class="gfg-icon gfg-icon_arrow-down gfg-icon_header"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/jobs/?ref=ghm" target=_self>Apply for Jobs</a></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Post a Job</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/hire-with-us/?ref=ghm" target=_self>Hire with Us</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://www.n0sy.com/Nosy.com-job-a-thon/?ref=ghm" target=_self>Know about Jobathon</a></li></ul></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/events/rec/job-a-thon/?ref=ghm" target=_self>Jobathon</a></li></ul></li><li class=header-main__list-item data-parent=true aria-expanded=true data-expandable=true><y>Practice</y><i class="gfg-icon gfg-icon_arrow-down gfg-icon_header"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>All DSA Problems</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/problem-of-the-day?utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Problem of the Day</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/events/rec/interview-series?utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Interview Series: Weekly Contests</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/events/rec/step-up-coding-school?utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Bi-Wizard Coding: School Contests</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/events?utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Events</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=1&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Practice SDE Sheet</a></li><li class=mega-dropdown__list-item data-parent=true aria-expanded=true data-expandable=true><y>Curated DSA Lists</y><i class="gfg-icon gfg-icon_arrow-right"></i><ul class=mega-dropdown><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=2&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Top 50 Array Problems</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=3&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Top 50 String Problems</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=6&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Top 50 Tree Problems</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=5&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Top 50 Graph Problems</a></li><li class=mega-dropdown__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/explore?page=1&curated[]=4&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header" target=_self>Top 50 DP Problems</a></li></ul></li></ul></li><li class=header-main__list-item data-child=true aria-expanded=false data-expandable=false><a href="https://practice.n0sy.com/events?utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgcontest_header" class=remove-anchor__decoration target=_self>Contests</a></li></ul><ul class=header-main__left-list data-nl=false><li class="header-main__left-list-item gcse-search_li p-relative" aria-expanded=false data-expandable=false><form id=gcse-form data-sm=false class=p-relative><input class=gcse-search-input__wrapper id=gcse-search-input aria-expanded=false>
<i class="gfg-icon gfg-icon_times gfg-icon_white hide-search"></i>
<button class="gcse-search__btn not-expanded">
<i class="gfg-icon gfg-icon_search gfg-icon_white gcse-search__icon"></i></button></form></li><li class="header-main__left-list-item p-relative" aria-expanded=false data-expandable=true><i class="gfg-icon gfg-icon_ndot cursor-p" data-gfg-action=nineDot-menu></i><z class=nineDot-menu data-show=false><z class=nineDot-menu_container><z class=nineDot-menu_left><a href="https://write.n0sy.com/?ref=ndm" class=nineDot-menu_item rel="noopener noreferrer"><z class=img-wrapper><img src=https://media.n0sy.com/wp-content/cdn-uploads/write_ndi_20210312.svg alt=Write></z><z class=nineDot-menu_item-wrap><z class=head>Write</z><z class=text>Come write articles for us and get featured</z></z></a><a href="https://practice.n0sy.com/?ref=ndm" class=nineDot-menu_item rel="noopener noreferrer"><z class=img-wrapper><img src=https://media.n0sy.com/wp-content/cdn-uploads/practice_ndi_20210312.svg alt=Practice></z><z class=nineDot-menu_item-wrap><z class=head>Practice</z><z class=text>Learn and code with the best industry experts</z></z></a><a href="https://premium.n0sy.com/premium-plans/?ref=ndm" class=nineDot-menu_item rel="noopener noreferrer"><z class=img-wrapper><img src=https://media.n0sy.com/wp-content/cdn-uploads/premium_ndi_20210312.svg alt=Premium></z><z class=nineDot-menu_item-wrap><z class=head>Premium</z><z class=text>Get access to ad-free content, doubt assistance and more!</z></z></a><a href="https://practice.n0sy.com/jobs/?ref=ndm" class=nineDot-menu_item rel="noopener noreferrer"><z class=img-wrapper><img src=https://media.n0sy.com/wp-content/cdn-uploads/jobs_ndi_20210312.svg alt=Jobs></z><z class=nineDot-menu_item-wrap><z class=head>Jobs</z><z class=text>Come and find your dream job with us</z></z></a><script>toggleNineDotMenuImages(isDarkMode?gfgThemeList.DARK:gfgThemeList.LIGHT)</script></z><z class=nineDot-menu_right><ul><li><a href="https://www.n0sy.com/geeks-digest/?ref=ndm">Geeks Digest</a></li><li><a href="https://www.n0sy.com/quiz-corner-gq/?ref=ndm">Quizzes</a></li><li><a href="https://practice.n0sy.com/geeks-campus/?ref=ndm">Geeks Campus</a></li></ul><ul><li><a href="https://www.n0sy.com/category/guestblogs/?ref=ndm">Gblog Articles</a></li><li><a href="https://ide.n0sy.com/?ref=ndm">IDE</a></li><li><a href="https://www.n0sy.com/campus-ambassador-program-by-Nosy.com/?ref=ndm">Campus Mantri</a></li></ul></z></z></z></li><li class="header-main__left-list-item google-translate-parent-element" aria-expanded=false data-expanded=true><z class=translate id=g_translater><z id=google_translate_element data-show=false></z></z><i class="gfg-icon gfg-icon_translate googleTranslateToggle" data-gfg-action=google_translate_element></i></li><li id=userProfileId class="header-main__left-list-item p-relative" aria-expanded=false data-expandable=false></li></ul></z><z class="gfg-overlay display-none" id=gfg-overlay></z><z class=header-sidebar__wrapper><ul class=header-sidebar__list><li class=header-sidebar__list-item><a href="https://www.n0sy.com/?ref=ghm" target=_self>Home</a></li><li class=header-sidebar__list-item><a href="https://www.n0sy.com/videos/watchlist/?ref=ghm" target=_self><y class="gfg-icon gfg-icon_video"></y><y>Saved Videos</y></a></li><li class=header-sidebar__list-item><a href="https://practice.n0sy.com/?ref=ghm" target=_self>Courses</a></li><li><ul id=sidebar-list></ul></li><li class=header-sidebar__list-item><a href="https://www.n0sy.com/category/guestblogs/?ref=ghm" target=_self>GBlog</a></li><li class=header-sidebar__list-item><a href="https://www.n0sy.com/puzzles/?ref=ghm" target=_self>Puzzles</a></li><li class=header-sidebar__list-item><a href="https://www.n0sy.com/geeks-classes-Nosy.com/?ref=ghm" target=_self>What\'s New ?</a></li></ul><z class=mobile_translate><z id=google_translate_mobile data-show=false></z><z style=margin:auto><button class=toggle-darkMode data-gfg-action=toggleGFGTheme>
<i class="gfg-icon gfg-icon_dark-mode"></i></button>
<button class=google_translate_element_mobile data-gfg-action=google_translate_mobile aria-expanded=false data-expanded=true>
<i class="gfg-icon gfg-icon_translate googleTranslateToggleMobile"></i>Change Language</button></z></z><z style=height:80px></z></z></z><z class=header-main__slider><button class="header-main__slider-arrow previous hideIt">
<i class="gfg-icon gfg-icon_arrow-left gicon-centered"></i></button><ul id=hslider><li><a href="https://www.n0sy.com/array-data-structure/?ref=shm">Array</a></li><li><a href="https://www.n0sy.com/matrix/?ref=shm">Matrix</a></li><li><a href="https://www.n0sy.com/string-data-structure/?ref=shm">Strings</a></li><li><a href="https://www.n0sy.com/hashing-data-structure/?ref=shm">Hashing</a></li><li><a href="https://www.n0sy.com/data-structures/linked-list/?ref=shm">Linked List</a></li><li><a href="https://www.n0sy.com/stack-data-structure/?ref=shm">Stack</a></li><li><a href="https://www.n0sy.com/queue-data-structure/?ref=shm">Queue</a></li><li><a href="https://www.n0sy.com/binary-tree-data-structure/?ref=shm">Binary Tree</a></li><li><a href="https://www.n0sy.com/binary-search-tree-data-structure/?ref=shm">Binary Search Tree</a></li><li><a href="https://www.n0sy.com/heap-data-structure/?ref=shm">Heap</a></li><li><a href="https://www.n0sy.com/graph-data-structure-and-algorithms/?ref=shm">Graph</a></li><li><a href="https://www.n0sy.com/searching-algorithms/?ref=shm">Searching</a></li><li><a href="https://www.n0sy.com/sorting-algorithms/?ref=shm">Sorting</a></li><li><a href="https://www.n0sy.com/divide-and-conquer/?ref=shm">Divide & Conquer</a></li><li><a href="https://www.n0sy.com/mathematical-algorithms/?ref=shm">Mathematical</a></li><li><a href="https://www.n0sy.com/geometric-algorithms/?ref=shm">Geometric</a></li><li><a href="https://www.n0sy.com/bitwise-algorithms/?ref=shm">Bitwise</a></li><li><a href="https://www.n0sy.com/greedy-algorithms/?ref=shm">Greedy</a></li><li><a href="https://www.n0sy.com/backtracking-algorithms/?ref=shm">Backtracking</a></li><li><a href="https://www.n0sy.com/branch-and-bound-algorithm/?ref=shm">Branch and Bound</a></li><li><a href="https://www.n0sy.com/dynamic-programming/?ref=shm">Dynamic Programming</a></li><li><a href="https://www.n0sy.com/algorithms-gq/pattern-searching/?ref=shm">Pattern Searching</a></li><li><a href="https://www.n0sy.com/randomized-algorithms/?ref=sh">Randomized</a></li></ul><button class="header-main__slider-arrow next hideIt">
<i class="gfg-icon gfg-icon_arrow-right gicon-centered"></i></button></z><z class="header-main__slider header-main__slider-sticky" style=display:none!important><z class=header-main__slider-flex><z class=header-main__slider-flex-inner title="Related articles" data-gfg-action=article-slider><i class="gfg-icon gfg-icon_article"></i>
<y style=margin-top:-2px>Related Articles</y>
<i class="gfg-icon gfg-icon_arrow-right"></i></z><z class=header-main__slider-flex-inner title="Bookmark Article" data-gfg-action=bookmark-article data-bookmark-value=0><i class="gfg-icon gfg-icon_bookmark"></i>
<y class=hide-sm style=margin-top:-2px data-value=bookmark-message></y></z></z></z><button id=scrollTopBtn title="Scroll to Top" type=button class="btn btn-success">&#9650;</button><z id=main class="wrapper single-page"><style>.wrapper{flex-direction:column!important}</style><z class=article-page_sidebar data-article-slider=0><z class=article-page_sidebar-overlay data-gfg-action=article-slider></z><z class=article-page_sidebar-inner><z class=article-page_sidebar-head><h2>Related Articles</h2><i class="gfg-icon gfg-icon_close cursor-p" data-gfg-action=article-slider></i></z><ul class=leftBarList><li><a href="https://www.n0sy.com/binary-search-tree-data-structure/?ref=lbp">Binary Search Tree</a></li><li><a href="https://www.n0sy.com/introduction-to-binary-search-tree-data-structure-and-algorithm-tutorials/?ref=lbp">Introduction to Binary Search Tree &#8211; Data Structure and Algorithm Tutorials</a></li><z class=leftbar-dropdown><z class=dropdown-title>Introduction<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/binary-search-tree-set-1-search-and-insertion/?ref=lbp">Binary Search Tree | Set 1 (Search and Insertion)</a></li><li><a href="https://www.n0sy.com/binary-search-tree-set-2-delete/?ref=lbp">Binary Search Tree | Set 2 (Delete)</a></li><li><a href="https://www.n0sy.com/advantages-of-bst-over-hash-table/?ref=lbp">Advantages of BST over Hash Table</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Construction and conversion<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/construct-bst-from-given-preorder-traversa/?ref=lbp">Construct BST from given preorder traversal | Set 1</a></li><li><a href="https://www.n0sy.com/binary-tree-to-binary-search-tree-conversion/?ref=lbp">Binary Tree to Binary Search Tree Conversion</a></li><li><a href="https://www.n0sy.com/binary-tree-binary-search-tree-conversion-using-stl-set/?ref=lbp">Binary Tree to Binary Search Tree Conversion using STL set</a></li><li><a href="https://www.n0sy.com/merge-two-bsts-with-limited-extra-space/?ref=lbp">Merge two BSTs with limited extra space</a></li><li><a href="https://www.n0sy.com/transform-bst-sum-tree/?ref=lbp">Transform a BST to greater sum tree</a></li><li><a href="https://www.n0sy.com/construct-all-possible-bsts-for-keys-1-to-n/?ref=lbp">Construct all possible BSTs for keys 1 to N</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Checking and Searching<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/find-the-minimum-element-in-a-binary-search-tree/?ref=lbp">Find the node with minimum value in a Binary Search Tree</a></li><li><a href="https://www.n0sy.com/check-array-represents-inorder-binary-search-tree-not/?ref=lbp">Check if an array represents Inorder of Binary Search tree or not</a></li><li><a href="https://www.n0sy.com/inorder-predecessor-successor-given-key-bst/?ref=lbp">Inorder predecessor and successor for a given key in BST</a></li><li><a href="https://www.n0sy.com/inorder-predecessor-and-successor-for-a-given-key-in-bst-iterative-approach/?ref=lbp">Inorder predecessor and successor for a given key in BST | Iterative Approach</a></li><li><a href="https://www.n0sy.com/kth-largest-element-in-bst-when-modification-to-bst-is-not-allowed/?ref=lbp">K&#8217;th Largest Element in BST when modification to BST is not allowed</a></li><li><a href="https://www.n0sy.com/kth-smallest-element-in-bst-using-o1-extra-space/?ref=lbp">K&#8217;th smallest element in BST using O(1) Extra Space</a></li><li><a href="https://www.n0sy.com/find-pair-given-sum-bst/?ref=lbp">Find a pair with given sum in BST</a></li><li><a href="https://www.n0sy.com/lowest-common-ancestor-in-a-binary-search-tree/?ref=lbp">Lowest Common Ancestor in a Binary Search Tree.</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Balanced BST<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/sorted-linked-list-to-balanced-bst/?ref=lbp">Sorted Linked List to Balanced BST</a></li><li><a href="https://www.n0sy.com/how-to-determine-if-a-binary-tree-is-balanced/?ref=lbp">How to determine if a binary tree is height-balanced?</a></li><li><a href="https://www.n0sy.com/avl-tree-set-1-insertion/?ref=lbp">AVL Tree | Set 1 (Insertion)</a></li><li><a href="https://www.n0sy.com/avl-tree-set-2-deletion/?ref=lbp">AVL Tree | Set 2 (Deletion)</a></li><li><a href="https://www.n0sy.com/find-a-pair-with-given-sum-in-bst/?ref=lbp">Find a pair with given sum in a Balanced BST</a></li><li><a href="https://www.n0sy.com/merge-two-balanced-binary-search-trees/?ref=lbp">Merge Two Balanced Binary Search Trees</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li><li><a href="https://www.n0sy.com/red-black-tree-set-1-introduction-2/?ref=lbp">Red-Black Tree | Set 1 (Introduction)</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Red-black and threaded binary tree<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/threaded-binary-tree/?ref=lbp">Threaded Binary Tree</a></li><li><a href="https://www.n0sy.com/threaded-binary-tree-insertion/?ref=lbp">Threaded Binary Tree | Insertion</a></li><li><a href="https://www.n0sy.com/threaded-binary-search-tree-deletion/?ref=lbp">Threaded Binary Search Tree | Deletion</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li><li><a href="https://www.n0sy.com/how-to-handle-duplicates-in-binary-search-tree/?ref=lbp">How to handle duplicates in Binary Search Tree?</a></li><li><a href="https://www.n0sy.com/print-common-nodes-in-two-binary-search-trees/?ref=lbp">Print Common Nodes in Two Binary Search Trees</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Some Other Interesting Problems<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/fix-two-swapped-nodes-of-bst/?ref=lbp">Two nodes of a BST are swapped, correct the BST</a></li><li><a href="https://www.n0sy.com/count-inversions-in-an-array-set-2-using-self-balancing-bst/?ref=lbp">Count inversions in an array | Set 2 (Using Self-Balancing BST)</a></li></ul></z></ul></z></z><z class="container-fluid bg-light" id=home-page style=position:relative;max-width:100%><z class=article-page_flex><z class=sidebar_wrapper><z class=sideBar><z class=sideBar--wrap><ul class=leftBarList><li><a href="https://www.n0sy.com/binary-search-tree-data-structure/?ref=lbp">Binary Search Tree</a></li><li><a href="https://www.n0sy.com/introduction-to-binary-search-tree-data-structure-and-algorithm-tutorials/?ref=lbp">Introduction to Binary Search Tree &#8211; Data Structure and Algorithm Tutorials</a></li><z class=leftbar-dropdown><z class=dropdown-title>Introduction<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/binary-search-tree-set-1-search-and-insertion/?ref=lbp">Binary Search Tree | Set 1 (Search and Insertion)</a></li><li><a href="https://www.n0sy.com/binary-search-tree-set-2-delete/?ref=lbp">Binary Search Tree | Set 2 (Delete)</a></li><li><a href="https://www.n0sy.com/advantages-of-bst-over-hash-table/?ref=lbp">Advantages of BST over Hash Table</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Construction and conversion<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/construct-bst-from-given-preorder-traversa/?ref=lbp">Construct BST from given preorder traversal | Set 1</a></li><li><a href="https://www.n0sy.com/binary-tree-to-binary-search-tree-conversion/?ref=lbp">Binary Tree to Binary Search Tree Conversion</a></li><li><a href="https://www.n0sy.com/binary-tree-binary-search-tree-conversion-using-stl-set/?ref=lbp">Binary Tree to Binary Search Tree Conversion using STL set</a></li><li><a href="https://www.n0sy.com/merge-two-bsts-with-limited-extra-space/?ref=lbp">Merge two BSTs with limited extra space</a></li><li><a href="https://www.n0sy.com/transform-bst-sum-tree/?ref=lbp">Transform a BST to greater sum tree</a></li><li><a href="https://www.n0sy.com/construct-all-possible-bsts-for-keys-1-to-n/?ref=lbp">Construct all possible BSTs for keys 1 to N</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Checking and Searching<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/find-the-minimum-element-in-a-binary-search-tree/?ref=lbp">Find the node with minimum value in a Binary Search Tree</a></li><li><a href="https://www.n0sy.com/check-array-represents-inorder-binary-search-tree-not/?ref=lbp">Check if an array represents Inorder of Binary Search tree or not</a></li><li><a href="https://www.n0sy.com/inorder-predecessor-successor-given-key-bst/?ref=lbp">Inorder predecessor and successor for a given key in BST</a></li><li><a href="https://www.n0sy.com/inorder-predecessor-and-successor-for-a-given-key-in-bst-iterative-approach/?ref=lbp">Inorder predecessor and successor for a given key in BST | Iterative Approach</a></li><li><a href="https://www.n0sy.com/kth-largest-element-in-bst-when-modification-to-bst-is-not-allowed/?ref=lbp">K&#8217;th Largest Element in BST when modification to BST is not allowed</a></li><li><a href="https://www.n0sy.com/kth-smallest-element-in-bst-using-o1-extra-space/?ref=lbp">K&#8217;th smallest element in BST using O(1) Extra Space</a></li><li><a href="https://www.n0sy.com/find-pair-given-sum-bst/?ref=lbp">Find a pair with given sum in BST</a></li><li><a href="https://www.n0sy.com/lowest-common-ancestor-in-a-binary-search-tree/?ref=lbp">Lowest Common Ancestor in a Binary Search Tree.</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Balanced BST<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/sorted-linked-list-to-balanced-bst/?ref=lbp">Sorted Linked List to Balanced BST</a></li><li><a href="https://www.n0sy.com/how-to-determine-if-a-binary-tree-is-balanced/?ref=lbp">How to determine if a binary tree is height-balanced?</a></li><li><a href="https://www.n0sy.com/avl-tree-set-1-insertion/?ref=lbp">AVL Tree | Set 1 (Insertion)</a></li><li><a href="https://www.n0sy.com/avl-tree-set-2-deletion/?ref=lbp">AVL Tree | Set 2 (Deletion)</a></li><li><a href="https://www.n0sy.com/find-a-pair-with-given-sum-in-bst/?ref=lbp">Find a pair with given sum in a Balanced BST</a></li><li><a href="https://www.n0sy.com/merge-two-balanced-binary-search-trees/?ref=lbp">Merge Two Balanced Binary Search Trees</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li><li><a href="https://www.n0sy.com/red-black-tree-set-1-introduction-2/?ref=lbp">Red-Black Tree | Set 1 (Introduction)</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Red-black and threaded binary tree<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/threaded-binary-tree/?ref=lbp">Threaded Binary Tree</a></li><li><a href="https://www.n0sy.com/threaded-binary-tree-insertion/?ref=lbp">Threaded Binary Tree | Insertion</a></li><li><a href="https://www.n0sy.com/threaded-binary-search-tree-deletion/?ref=lbp">Threaded Binary Search Tree | Deletion</a></li><li><a href="https://www.n0sy.com/convert-normal-bst-balanced-bst/?ref=lbp">Convert a normal BST to Balanced BST</a></li><li><a href="https://www.n0sy.com/how-to-handle-duplicates-in-binary-search-tree/?ref=lbp">How to handle duplicates in Binary Search Tree?</a></li><li><a href="https://www.n0sy.com/print-common-nodes-in-two-binary-search-trees/?ref=lbp">Print Common Nodes in Two Binary Search Trees</a></li></ul></z><z class=leftbar-dropdown><z class=dropdown-title>Some Other Interesting Problems<y class="gfg-icon gfg-icon_arrow-down-thin"></y></z><ul><li><a href="https://www.n0sy.com/fix-two-swapped-nodes-of-bst/?ref=lbp">Two nodes of a BST are swapped, correct the BST</a></li><li><a href="https://www.n0sy.com/count-inversions-in-an-array-set-2-using-self-balancing-bst/?ref=lbp">Count inversions in an array | Set 2 (Using Self-Balancing BST)</a></li></ul></z></ul></z></z><z id=GFG_AD_Desktop_LeftSideBar_Docked_160x600 style=max-width:160px;max-height:600px></z></z><z class=leftBar><z class=article--viewer><z class=article--viewer_content><z class=a-wrapper><z style=z-index:9999!important;position:relative></z><article class="content post-137663 post type-post status-publish format-standard hentry category-binary-search-tree category-tree" id=post-137663><z style=position:relative><z class=article-title><h1>Convert a normal BST to Balanced BST</h1></z><z class=article_button_copy><z class=article-buttons><z class="article--viewer_comments tooltip"><y class=tooltiptext>View Discussion</y>
<button data-gfg-action=loadComments>
<i class="gfg-icon gfg-icon_comment"></i></button></z><z pid=137663 ptitle="Convert a normal BST to Balanced BST" class="article--viewer_improve tooltip"><y class=tooltiptext>Improve Article</y>
<button onclick=improveArticleCall()>
<i class="gfg-icon gfg-icon_edit"></i></button></z><z pid=137663 class="article--viewer_bookmark tooltip"><y class=tooltiptext>Save Article</y>
<button data-gfg-action=bookmark-article data-bookmark-value=0>
<i class="gfg-icon gfg-icon_bookmark"></i></button></z><z pid=137663 class="article--viewer_like tooltip" style=display:none><y class=tooltiptext>Like Article</y>
<button data-gfg-action=like-article data-bookmark-value=0>
<i class="gfg-icon gfg-icon_thumbs"></i></button></z></z></z><z class=media><z class=meta><ul><li><y class=strong>Difficulty Level :</y>
<y><a href=https://www.n0sy.com/medium/>Medium</a></y></li><li><y class=strong>Last Updated :</y>
<y>30 Jun, 2022</y></li></ul></z></z></z><z class=main_wrapper><z style=display:flex><li style="padding:10px 30px 0"><a class="nav_tab article active">Read</a></li><li><a class=nav_tab data-gfg-action=loadComments>Discuss</a></li></z><z class=article-buttons><z class="article--viewer_comments tooltip"><y class=tooltiptext>View Discussion</y>
<button data-gfg-action=loadComments>
<i class="gfg-icon gfg-icon_comment"></i></button></z><z pid=137663 ptitle="Convert a normal BST to Balanced BST" class="article--viewer_improve tooltip"><y class=tooltiptext>Improve Article</y>
<button onclick=improveArticleCall()>
<i class="gfg-icon gfg-icon_edit"></i></button></z><z pid=137663 class="article--viewer_bookmark tooltip"><y class=tooltiptext>Save Article</y>
<button data-gfg-action=bookmark-article data-bookmark-value=0>
<i class="gfg-icon gfg-icon_bookmark"></i></button></z><z pid=137663 class="article--viewer_like tooltip" style=display:none><y class=tooltiptext>Like Article</y>
<button data-gfg-action=like-article data-bookmark-value=0>
<i class="gfg-icon gfg-icon_thumbs"></i></button></z></z></z><z class=text><x>Given a BST (<strong>B</strong>inary <strong>S</strong>earch <strong>T</strong>ree) that may be unbalanced, convert it into a balanced BST that has minimum possible height.</x><x><strong>Examples :&nbsp;</strong></x><z id=GFG_AD_gfg_mobile_336x280></z><xre>Input: 30 / 20 / 10
Output: 20 / \\ 10 30 Input: 4 / 3 / 2 / 1
Output: 3 3 2 / \\ / \\ / \\ 1 4 OR 2 4 OR 1 3 OR .. \\ / \\ 2 1 4 Input: 4 / \\ 3 5 / \\ 2 6 / \\ 1 7
Output: 4 / \\ 2 6 / \\ / \\
1 3 5 7 </xre><z id=practiceLinkDiv><z class=practiceLinkDiv-banner><z class=info><z class=small>Recommended Practice</z><z class=title><a href=https://practice.n0sy.com/problems/normal-bst-to-balanced-bst/1/ title="Permalink to Normal BST to Balanced BST" permalink>Normal BST to Balanced BST</a></z></z><z class=redirect><a href=https://practice.n0sy.com/problems/normal-bst-to-balanced-bst/1/ title="Permalink to Normal BST to Balanced BST" permalink>Try It!</a></z></z></z><x>A <strong>Simple Solution</strong> is to traverse nodes in Inorder and one by one insert into a self-balancing BST like AVL tree. Time complexity of this solution is O(n Log n) and this solution doesn&#8217;t guarantee&nbsp;<br>An <strong>Efficient Solution</strong> can construct balanced BST in O(n) time with minimum possible height. Below are steps.&nbsp;</x><ol><li>Traverse given BST in inorder and store result in an array. This step takes O(n) time. Note that this array would be sorted as inorder traversal of BST always produces sorted sequence.</li><li>Build a balanced BST from the above created sorted array using the recursive approach discussed <a href=https://www.n0sy.com/sorted-array-to-balanced-bst/>here</a>. This step also takes O(n) time as we traverse every element exactly once and processing an element takes O(1) time.</li></ol><x>Below is the implementation of above steps.&nbsp;</x><z style="min-height:250px;text-align:center;margin:20px 0" id=GFG_AD_Desktop_PostContent_300x250></z><z class=responsive-tabs><h2 class=tabtitle>C++</h2><z class=tabcontent><z class=code-block><z class=code-gutter><z class=editor-buttons-container><z class=editor-buttons><z class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></x><z id=run-and-edit-loader class=ring-load></z><x><i id=run-and-edit-button title="Edit Code" lang=cpp class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></x><z id=run-code-loader class=ring-load></z><x><i id=run-code-button lang=cpp title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></x><z id=generate-url-loader class=ring-load></z><x><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=cpp class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=cpp class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></z></x></z></x></z></x></z><z class=code-container><z id=highlighter_476295 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><z class=container><z class="line number1 index0 alt2"><code class=comments>// C++ program to convert a left unbalanced BST to</code></z><z class="line number2 index1 alt1"><code class=comments>// a balanced BST</code></z><z class="line number3 index2 alt2"><code class=preprocessor>#include &lt;bits/stdc++.h></code></z><z class="line number4 index3 alt1"><code class="keyword bold">using</code> <code class="keyword bold">namespace</code> <code class=plain>std;</code></z><z class="line number5 index4 alt2">&nbsp;</z><z class="line number6 index5 alt1"><code class="keyword bold">struct</code> <code class=plain>Node</code></z><z class="line number7 index6 alt2"><code class=plain>{</code></z><z class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1 bold">int</code> <code class=plain>data;</code></z><z class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node* left,&nbsp; *right;</code></z><z class="line number10 index9 alt1"><code class=plain>};</code></z><z class="line number11 index10 alt2">&nbsp;</z><z class="line number12 index11 alt1"><code class=comments>/* This function traverse the skewed binary tree and</code></z><z class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;</code><code class=comments>stores its nodes pointers in vector nodes[] */</code></z><z class="line number14 index13 alt1"><code class="keyword bold">void</code> <code class=plain>storeBSTNodes(Node* root, vector&lt;Node*> &nodes)</code></z><z class="line number15 index14 alt2"><code class=plain>{</code></z><z class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Base case</code></z><z class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">if</code> <code class=plain>(root==NULL)</code></z><z class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code><code class=plain>;</code></z><z class="line number19 index18 alt2">&nbsp;</z><z class="line number20 index19 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes in Inorder (which is sorted</code></z><z class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// order for BST)</code></z><z class="line number22 index21 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root->left, nodes);</code></z><z class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes.push_back(root);</code></z><z class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root->right, nodes);</code></z><z class="line number25 index24 alt2"><code class=plain>}</code></z><z class="line number26 index25 alt1">&nbsp;</z><z class="line number27 index26 alt2"><code class=comments>/* Recursive function to construct binary tree */</code></z><z class="line number28 index27 alt1"><code class=plain>Node* buildTreeUtil(vector&lt;Node*> &nodes, </code><code class="color1 bold">int</code> <code class=plain>start,</code></z><z class="line number29 index28 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1 bold">int</code> <code class=plain>end)</code></z><z class="line number30 index29 alt1"><code class=plain>{</code></z><z class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// base case</code></z><z class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">if</code> <code class=plain>(start > end)</code></z><z class="line number33 index32 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code> <code class=plain>NULL;</code></z><z class="line number34 index33 alt1">&nbsp;</z><z class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Get the middle element and make it root */</code></z><z class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1 bold">int</code> <code class=plain>mid = (start + end)/2;</code></z><z class="line number37 index36 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node *root = nodes[mid];</code></z><z class="line number38 index37 alt1">&nbsp;</z><z class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Using index in Inorder traversal, construct</code></z><z class="line number40 index39 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>left and right subtress */</code></z><z class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->left&nbsp; = buildTreeUtil(nodes, start, mid-1);</code></z><z class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->right = buildTreeUtil(nodes, mid+1, end);</code></z><z class="line number43 index42 alt2">&nbsp;</z><z class="line number44 index43 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code> <code class=plain>root;</code></z><z class="line number45 index44 alt2"><code class=plain>}</code></z><z class="line number46 index45 alt1">&nbsp;</z><z class="line number47 index46 alt2"><code class=comments>// This functions converts an unbalanced BST to</code></z><z class="line number48 index47 alt1"><code class=comments>// a balanced BST</code></z><z class="line number49 index48 alt2"><code class=plain>Node* buildTree(Node* root)</code></z><z class="line number50 index49 alt1"><code class=plain>{</code></z><z class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes of given BST in sorted order</code></z><z class="line number52 index51 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>vector&lt;Node *> nodes;</code></z><z class="line number53 index52 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root, nodes);</code></z><z class="line number54 index53 alt1">&nbsp;</z><z class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Constructs BST from nodes[]</code></z><z class="line number56 index55 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1 bold">int</code> <code class=plain>n = nodes.size();</code></z><z class="line number57 index56 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code> <code class=plain>buildTreeUtil(nodes, 0, n-1);</code></z><z class="line number58 index57 alt1"><code class=plain>}</code></z><z class="line number59 index58 alt2">&nbsp;</z><z class="line number60 index59 alt1"><code class=comments>// Utility function to create a new node</code></z><z class="line number61 index60 alt2"><code class=plain>Node* newNode(</code><code class="color1 bold">int</code> <code class=plain>data)</code></z><z class="line number62 index61 alt1"><code class=plain>{</code></z><z class="line number63 index62 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node* node = </code><code class="keyword bold">new</code> <code class=plain>Node;</code></z><z class="line number64 index63 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node->data = data;</code></z><z class="line number65 index64 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node->left = node->right = NULL;</code></z><z class="line number66 index65 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code> <code class=plain>(node);</code></z><z class="line number67 index66 alt2"><code class=plain>}</code></z><z class="line number68 index67 alt1">&nbsp;</z><z class="line number69 index68 alt2"><code class=comments>/* Function to do preorder traversal of tree */</code></z><z class="line number70 index69 alt1"><code class="keyword bold">void</code> <code class=plain>preOrder(Node* node)</code></z><z class="line number71 index70 alt2"><code class=plain>{</code></z><z class="line number72 index71 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">if</code> <code class=plain>(node == NULL)</code></z><z class="line number73 index72 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code><code class=plain>;</code></z><z class="line number74 index73 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions bold">printf</code><code class=plain>(</code><code class=string>"%d "</code><code class=plain>, node->data);</code></z><z class="line number75 index74 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node->left);</code></z><z class="line number76 index75 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node->right);</code></z><z class="line number77 index76 alt2"><code class=plain>}</code></z><z class="line number78 index77 alt1">&nbsp;</z><z class="line number79 index78 alt2"><code class=comments>// Driver program</code></z><z class="line number80 index79 alt1"><code class="color1 bold">int</code> <code class=plain>main()</code></z><z class="line number81 index80 alt2"><code class=plain>{</code></z><z class="line number82 index81 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Constructed skewed binary tree is</code></z><z class="line number83 index82 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>10</code></z><z class="line number84 index83 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number85 index84 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>8</code></z><z class="line number86 index85 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number87 index86 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>7</code></z><z class="line number88 index87 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number89 index88 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>6</code></z><z class="line number90 index89 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number91 index90 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>5&nbsp;&nbsp; */</code></z><z class="line number92 index91 alt1">&nbsp;</z><z class="line number93 index92 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node* root = newNode(10);</code></z><z class="line number94 index93 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->left = newNode(8);</code></z><z class="line number95 index94 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->left->left = newNode(7);</code></z><z class="line number96 index95 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->left->left->left = newNode(6);</code></z><z class="line number97 index96 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root->left->left->left->left = newNode(5);</code></z><z class="line number98 index97 alt1">&nbsp;</z><z class="line number99 index98 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root = buildTree(root);</code></z><z class="line number100 index99 alt1">&nbsp;</z><z class="line number101 index100 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions bold">printf</code><code class=plain>(</code><code class=string>"Preorder traversal of balanced "</code></z><z class="line number102 index101 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=string>"BST is : \\n"</code><code class=plain>);</code></z><z class="line number103 index102 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(root);</code></z><z class="line number104 index103 alt1">&nbsp;</z><z class="line number105 index104 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword bold">return</code> <code class=plain>0;</code></z><z class="line number106 index105 alt1"><code class=plain>}</code></z></z></td></tr></tbody></table></z></z><z class=code-editor-container></z></x></z><z class=code-output-container><z class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></x><xre class=output-pre></xre></x></z><z class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></x><xre id=ide-url></xre></x></z></x></z></z><h2 class=tabtitle>Java</h2><z class=tabcontent><z class=code-block><z class=code-gutter><z class=editor-buttons-container><z class=editor-buttons><z class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></x><z id=run-and-edit-loader class=ring-load></z><x><i id=run-and-edit-button title="Edit Code" lang=java class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></x><z id=run-code-loader class=ring-load></z><x><i id=run-code-button lang=java title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></x><z id=generate-url-loader class=ring-load></z><x><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=java class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=java class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></z></x></z></x></z></x></z><z class=code-container><z id=highlighter_384362 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><z class=container><z class="line number1 index0 alt2"><code class=comments>// Java program to convert a left unbalanced BST to a balanced BST</code></z><z class="line number2 index1 alt1">&nbsp;</z><z class="line number3 index2 alt2"><code class=keyword>import</code> <code class=plain>java.util.*;</code></z><z class="line number4 index3 alt1">&nbsp;</z><z class="line number5 index4 alt2"><code class=comments>/* A binary tree node has data, pointer to left child</code></z><z class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;</code><code class=comments>and a pointer to right child */</code></z><z class="line number7 index6 alt2"><code class=keyword>class</code> <code class=plain>Node</code></z><z class="line number8 index7 alt1"><code class=plain>{</code></z><z class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>data;</code></z><z class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node left, right;</code></z><z class="line number11 index10 alt2">&nbsp;</z><z class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=plain>Node(</code><code class=keyword>int</code> <code class=plain>data)</code></z><z class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>this</code><code class=plain>.data = data;</code></z><z class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>left = right = </code><code class=keyword>null</code><code class=plain>;</code></z><z class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number17 index16 alt2"><code class=plain>}</code></z><z class="line number18 index17 alt1">&nbsp;</z><z class="line number19 index18 alt2"><code class=keyword>class</code> <code class=plain>BinaryTree</code></z><z class="line number20 index19 alt1"><code class=plain>{</code></z><z class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node root;</code></z><z class="line number22 index21 alt1">&nbsp;</z><z class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* This function traverse the skewed binary tree and</code></z><z class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>stores its nodes pointers in vector nodes[] */</code></z><z class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>void</code> <code class=plain>storeBSTNodes(Node root, Vector&lt;Node> nodes)</code></z><z class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number27 index26 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Base case</code></z><z class="line number28 index27 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(root == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number29 index28 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number30 index29 alt1">&nbsp;</z><z class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes in Inorder (which is sorted</code></z><z class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// order for BST)</code></z><z class="line number33 index32 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.left, nodes);</code></z><z class="line number34 index33 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes.add(root);</code></z><z class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.right, nodes);</code></z><z class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number37 index36 alt2">&nbsp;</z><z class="line number38 index37 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Recursive function to construct binary tree */</code></z><z class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node buildTreeUtil(Vector&lt;Node> nodes, </code><code class=keyword>int</code> <code class=plain>start,</code></z><z class="line number40 index39 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>end)</code></z><z class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// base case</code></z><z class="line number43 index42 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(start > end)</code></z><z class="line number44 index43 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=keyword>null</code><code class=plain>;</code></z><z class="line number45 index44 alt2">&nbsp;</z><z class="line number46 index45 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Get the middle element and make it root */</code></z><z class="line number47 index46 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>mid = (start + end) / </code><code class=value>2</code><code class=plain>;</code></z><z class="line number48 index47 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node node = nodes.get(mid);</code></z><z class="line number49 index48 alt2">&nbsp;</z><z class="line number50 index49 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Using index in Inorder traversal, construct</code></z><z class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>left and right subtress */</code></z><z class="line number52 index51 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.left = buildTreeUtil(nodes, start, mid - </code><code class=value>1</code><code class=plain>);</code></z><z class="line number53 index52 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.right = buildTreeUtil(nodes, mid + </code><code class=value>1</code><code class=plain>, end);</code></z><z class="line number54 index53 alt1">&nbsp;</z><z class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>node;</code></z><z class="line number56 index55 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number57 index56 alt2">&nbsp;</z><z class="line number58 index57 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// This functions converts an unbalanced BST to</code></z><z class="line number59 index58 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// a balanced BST</code></z><z class="line number60 index59 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node buildTree(Node root)</code></z><z class="line number61 index60 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number62 index61 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes of given BST in sorted order</code></z><z class="line number63 index62 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Vector&lt;Node> nodes = </code><code class=keyword>new</code> <code class=plain>Vector&lt;Node>();</code></z><z class="line number64 index63 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root, nodes);</code></z><z class="line number65 index64 alt2">&nbsp;</z><z class="line number66 index65 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Constructs BST from nodes[]</code></z><z class="line number67 index66 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>n = nodes.size();</code></z><z class="line number68 index67 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>buildTreeUtil(nodes, </code><code class=value>0</code><code class=plain>, n - </code><code class=value>1</code><code class=plain>);</code></z><z class="line number69 index68 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number70 index69 alt1">&nbsp;</z><z class="line number71 index70 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Function to do preorder traversal of tree */</code></z><z class="line number72 index71 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>void</code> <code class=plain>preOrder(Node node)</code></z><z class="line number73 index72 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number74 index73 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(node == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number75 index74 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number76 index75 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>System.out.print(node.data + </code><code class=string>" "</code><code class=plain>);</code></z><z class="line number77 index76 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.left);</code></z><z class="line number78 index77 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.right);</code></z><z class="line number79 index78 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number80 index79 alt1">&nbsp;</z><z class="line number81 index80 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Driver program to test the above functions</code></z><z class="line number82 index81 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>static</code> <code class=keyword>void</code> <code class=plain>main(String[] args)</code></z><z class="line number83 index82 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number84 index83 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Constructed skewed binary tree is</code></z><z class="line number85 index84 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>10</code></z><z class="line number86 index85 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number87 index86 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>8</code></z><z class="line number88 index87 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number89 index88 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>7</code></z><z class="line number90 index89 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number91 index90 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>6</code></z><z class="line number92 index91 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number93 index92 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>5&nbsp;&nbsp; */</code></z><z class="line number94 index93 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>BinaryTree tree = </code><code class=keyword>new</code> <code class=plain>BinaryTree();</code></z><z class="line number95 index94 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root = </code><code class=keyword>new</code> <code class=plain>Node(</code><code class=value>10</code><code class=plain>);</code></z><z class="line number96 index95 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left = </code><code class=keyword>new</code> <code class=plain>Node(</code><code class=value>8</code><code class=plain>);</code></z><z class="line number97 index96 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left = </code><code class=keyword>new</code> <code class=plain>Node(</code><code class=value>7</code><code class=plain>);</code></z><z class="line number98 index97 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(</code><code class=value>6</code><code class=plain>);</code></z><z class="line number99 index98 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(</code><code class=value>5</code><code class=plain>);</code></z><z class="line number100 index99 alt1">&nbsp;</z><z class="line number101 index100 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root = tree.buildTree(tree.root);</code></z><z class="line number102 index101 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>System.out.println(</code><code class=string>"Preorder traversal of balanced BST is :"</code><code class=plain>);</code></z><z class="line number103 index102 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.preOrder(tree.root);</code></z><z class="line number104 index103 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number105 index104 alt2"><code class=plain>}</code></z><z class="line number106 index105 alt1">&nbsp;</z><z class="line number107 index106 alt2"><code class=comments>// This code has been contributed by Mayank Jaiswal(mayank_24)</code></z></z></td></tr></tbody></table></z></z><z class=code-editor-container></z></x></z><z class=code-output-container><z class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></x><xre class=output-pre></xre></x></z><z class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></x><xre id=ide-url></xre></x></z></x></z></z><h2 class=tabtitle>Python3</h2><z class=tabcontent><z class=code-block><z class=code-gutter><z class=editor-buttons-container><z class=editor-buttons><z class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></x><z id=run-and-edit-loader class=ring-load></z><x><i id=run-and-edit-button title="Edit Code" lang=python3 class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></x><z id=run-code-loader class=ring-load></z><x><i id=run-code-button lang=python3 title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></x><z id=generate-url-loader class=ring-load></z><x><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=python3 class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=python3 class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></z></x></z></x></z></x></z><z class=code-container><z id=highlighter_335624 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><z class=container><z class="line number1 index0 alt2"><code class=comments># Python3 program to convert a left</code></z><z class="line number2 index1 alt1"><code class=comments># unbalanced BST to a balanced BST</code></z><z class="line number3 index2 alt2"><code class=keyword>import</code> <code class=plain>sys</code></z><z class="line number4 index3 alt1"><code class=keyword>import</code> <code class=plain>math</code></z><z class="line number5 index4 alt2">&nbsp;</z><z class="line number6 index5 alt1"><code class=comments># A binary tree node has data, pointer to left child</code></z><z class="line number7 index6 alt2"><code class=comments># and a pointer to right child</code></z><z class="line number8 index7 alt1"><code class=keyword>class</code> <code class=plain>Node:</code></z><z class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>def</code> <code class=plain>__init__(</code><code class=color1>self</code><code class=plain>,data):</code></z><z class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=color1>self</code><code class=plain>.data</code><code class=keyword>=</code><code class=plain>data</code></z><z class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=color1>self</code><code class=plain>.left</code><code class=keyword>=</code><code class=color1>None</code></z><z class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=color1>self</code><code class=plain>.right</code><code class=keyword>=</code><code class=color1>None</code></z><z class="line number13 index12 alt2">&nbsp;</z><z class="line number14 index13 alt1"><code class=comments># This function traverse the skewed binary tree and</code></z><z class="line number15 index14 alt2"><code class=comments># stores its nodes pointers in vector nodes[]</code></z><z class="line number16 index15 alt1"><code class=keyword>def</code> <code class=plain>storeBSTNodes(root,nodes):</code></z><z class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Base case</code></z><z class="line number19 index18 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=keyword>not</code> <code class=plain>root:</code></z><z class="line number20 index19 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code></z><z class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number22 index21 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Store nodes in Inorder (which is sorted</code></z><z class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># order for BST)</code></z><z class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.left,nodes)</code></z><z class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes.append(root)</code></z><z class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.right,nodes)</code></z><z class="line number27 index26 alt2">&nbsp;</z><z class="line number28 index27 alt1"><code class=comments># Recursive function to construct binary tree</code></z><z class="line number29 index28 alt2"><code class=keyword>def</code> <code class=plain>buildTreeUtil(nodes,start,end):</code></z><z class="line number30 index29 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># base case</code></z><z class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>start>end:</code></z><z class="line number33 index32 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=color1>None</code></z><z class="line number34 index33 alt1">&nbsp;</z><z class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Get the middle element and make it root</code></z><z class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>mid</code><code class=keyword>=</code><code class=plain>(start</code><code class=keyword>+</code><code class=plain>end)</code><code class=keyword>/</code><code class=keyword>/</code><code class=value>2</code></z><z class="line number37 index36 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node</code><code class=keyword>=</code><code class=plain>nodes[mid]</code></z><z class="line number38 index37 alt1">&nbsp;</z><z class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Using index in Inorder traversal, construct</code></z><z class="line number40 index39 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># left and right subtress</code></z><z class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.left</code><code class=keyword>=</code><code class=plain>buildTreeUtil(nodes,start,mid</code><code class=keyword>-</code><code class=value>1</code><code class=plain>)</code></z><z class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.right</code><code class=keyword>=</code><code class=plain>buildTreeUtil(nodes,mid</code><code class=keyword>+</code><code class=value>1</code><code class=plain>,end)</code></z><z class="line number43 index42 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>node</code></z><z class="line number44 index43 alt1">&nbsp;</z><z class="line number45 index44 alt2"><code class=comments># This functions converts an unbalanced BST to</code></z><z class="line number46 index45 alt1"><code class=comments># a balanced BST</code></z><z class="line number47 index46 alt2"><code class=keyword>def</code> <code class=plain>buildTree(root):</code></z><z class="line number48 index47 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number49 index48 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Store nodes of given BST in sorted order</code></z><z class="line number50 index49 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes</code><code class=keyword>=</code><code class=plain>[]</code></z><z class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root,nodes)</code></z><z class="line number52 index51 alt1">&nbsp;</z><z class="line number53 index52 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Constructs BST from nodes[]</code></z><z class="line number54 index53 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>n</code><code class=keyword>=</code><code class=functions>len</code><code class=plain>(nodes)</code></z><z class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>buildTreeUtil(nodes,</code><code class=value>0</code><code class=plain>,n</code><code class=keyword>-</code><code class=value>1</code><code class=plain>)</code></z><z class="line number56 index55 alt1">&nbsp;</z><z class="line number57 index56 alt2"><code class=comments># Function to do preorder traversal of tree</code></z><z class="line number58 index57 alt1"><code class=keyword>def</code> <code class=plain>preOrder(root):</code></z><z class="line number59 index58 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=keyword>not</code> <code class=plain>root:</code></z><z class="line number60 index59 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code></z><z class="line number61 index60 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>print</code><code class=plain>(</code><code class=string>"{} "</code><code class=plain>.</code><code class=functions>format</code><code class=plain>(root.data),end</code><code class=keyword>=</code><code class=plain>"")</code></z><z class="line number62 index61 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(root.left)</code></z><z class="line number63 index62 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(root.right)</code></z><z class="line number64 index63 alt1">&nbsp;</z><z class="line number65 index64 alt2"><code class=comments># Driver code</code></z><z class="line number66 index65 alt1"><code class=keyword>if</code> <code class=plain>__name__</code><code class=keyword>=</code><code class=keyword>=</code><code class=string>\'__main__\'</code><code class=plain>:</code></z><z class="line number67 index66 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># Constructed skewed binary tree is</code></z><z class="line number68 index67 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10</code></z><z class="line number69 index68 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /</code></z><z class="line number70 index69 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8</code></z><z class="line number71 index70 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /</code></z><z class="line number72 index71 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp; 7</code></z><z class="line number73 index72 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp; /</code></z><z class="line number74 index73 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp; 6</code></z><z class="line number75 index74 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>#&nbsp;&nbsp;&nbsp;&nbsp; /</code></z><z class="line number76 index75 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments># 5</code></z><z class="line number77 index76 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root </code><code class=keyword>=</code> <code class=plain>Node(</code><code class=value>10</code><code class=plain>)</code></z><z class="line number78 index77 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left </code><code class=keyword>=</code> <code class=plain>Node(</code><code class=value>8</code><code class=plain>)</code></z><z class="line number79 index78 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left </code><code class=keyword>=</code> <code class=plain>Node(</code><code class=value>7</code><code class=plain>)</code></z><z class="line number80 index79 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left.left </code><code class=keyword>=</code> <code class=plain>Node(</code><code class=value>6</code><code class=plain>)</code></z><z class="line number81 index80 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left.left.left </code><code class=keyword>=</code> <code class=plain>Node(</code><code class=value>5</code><code class=plain>)</code></z><z class="line number82 index81 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root </code><code class=keyword>=</code> <code class=plain>buildTree(root)</code></z><z class="line number83 index82 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>print</code><code class=plain>(</code><code class=string>"Preorder traversal of balanced BST is :"</code><code class=plain>)</code></z><z class="line number84 index83 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(root)</code></z><z class="line number85 index84 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number86 index85 alt1"><code class=comments># This code has been contributed by Vikash Kumar 37</code></z></z></td></tr></tbody></table></z></z><z class=code-editor-container></z></x></z><z class=code-output-container><z class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></x><xre class=output-pre></xre></x></z><z class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></x><xre id=ide-url></xre></x></z></x></z></z><h2 class=tabtitle>C#</h2><z class=tabcontent><z class=code-block><z class=code-gutter><z class=editor-buttons-container><z class=editor-buttons><z class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></x><z id=run-and-edit-loader class=ring-load></z><x><i id=run-and-edit-button title="Edit Code" lang=csharp class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></x><z id=run-code-loader class=ring-load></z><x><i id=run-code-button lang=csharp title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></x><z id=generate-url-loader class=ring-load></z><x><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=csharp class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=csharp class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></z></x></z></x></z></x></z><z class=code-container><z id=highlighter_134993 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><z class=container><z class="line number1 index0 alt2"><code class=keyword>using</code> <code class=plain>System;</code></z><z class="line number2 index1 alt1"><code class=keyword>using</code> <code class=plain>System.Collections.Generic;</code></z><z class="line number3 index2 alt2">&nbsp;</z><z class="line number4 index3 alt1"><code class=comments>// C# program to convert a left unbalanced BST to a balanced BST</code></z><z class="line number5 index4 alt2">&nbsp;</z><z class="line number6 index5 alt1"><code class=comments>/* A binary tree node has data, pointer to left child</code></z><z class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;</code><code class=comments>and a pointer to right child */</code></z><z class="line number8 index7 alt1"><code class=keyword>public</code> <code class=keyword>class</code> <code class=plain>Node</code></z><z class="line number9 index8 alt2"><code class=plain>{</code></z><z class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>int</code> <code class=plain>data;</code></z><z class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=plain>Node left, right;</code></z><z class="line number12 index11 alt1">&nbsp;</z><z class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=plain>Node(</code><code class=keyword>int</code> <code class=plain>data)</code></z><z class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>this</code><code class=plain>.data = data;</code></z><z class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>left = right = </code><code class=keyword>null</code><code class=plain>;</code></z><z class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number18 index17 alt1"><code class=plain>}</code></z><z class="line number19 index18 alt2">&nbsp;</z><z class="line number20 index19 alt1"><code class=keyword>public</code> <code class=keyword>class</code> <code class=plain>BinaryTree</code></z><z class="line number21 index20 alt2"><code class=plain>{</code></z><z class="line number22 index21 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=plain>Node root;</code></z><z class="line number23 index22 alt2">&nbsp;</z><z class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* This function traverse the skewed binary tree and</code></z><z class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>stores its nodes pointers in vector nodes[] */</code></z><z class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>virtual</code> <code class=keyword>void</code> <code class=plain>storeBSTNodes(Node root, List&lt;Node> nodes)</code></z><z class="line number27 index26 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number28 index27 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Base case</code></z><z class="line number29 index28 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(root == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number30 index29 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number33 index32 alt2">&nbsp;</z><z class="line number34 index33 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes in Inorder (which is sorted</code></z><z class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// order for BST)</code></z><z class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.left, nodes);</code></z><z class="line number37 index36 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes.Add(root);</code></z><z class="line number38 index37 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.right, nodes);</code></z><z class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number40 index39 alt1">&nbsp;</z><z class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Recursive function to construct binary tree */</code></z><z class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>virtual</code> <code class=plain>Node buildTreeUtil(List&lt;Node> nodes, </code><code class=keyword>int</code> <code class=plain>start, </code><code class=keyword>int</code> <code class=plain>end)</code></z><z class="line number43 index42 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number44 index43 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// base case</code></z><z class="line number45 index44 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(start > end)</code></z><z class="line number46 index45 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number47 index46 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=keyword>null</code><code class=plain>;</code></z><z class="line number48 index47 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number49 index48 alt2">&nbsp;</z><z class="line number50 index49 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Get the middle element and make it root */</code></z><z class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>mid = (start + end) / 2;</code></z><z class="line number52 index51 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Node node = nodes[mid];</code></z><z class="line number53 index52 alt2">&nbsp;</z><z class="line number54 index53 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Using index in Inorder traversal, construct</code></z><z class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>left and right subtress */</code></z><z class="line number56 index55 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.left = buildTreeUtil(nodes, start, mid - 1);</code></z><z class="line number57 index56 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.right = buildTreeUtil(nodes, mid + 1, end);</code></z><z class="line number58 index57 alt1">&nbsp;</z><z class="line number59 index58 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>node;</code></z><z class="line number60 index59 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number61 index60 alt2">&nbsp;</z><z class="line number62 index61 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// This functions converts an unbalanced BST to</code></z><z class="line number63 index62 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// a balanced BST</code></z><z class="line number64 index63 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>virtual</code> <code class=plain>Node buildTree(Node root)</code></z><z class="line number65 index64 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number66 index65 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes of given BST in sorted order</code></z><z class="line number67 index66 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>List&lt;Node> nodes = </code><code class=keyword>new</code> <code class=plain>List&lt;Node>();</code></z><z class="line number68 index67 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root, nodes);</code></z><z class="line number69 index68 alt2">&nbsp;</z><z class="line number70 index69 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Constructs BST from nodes[]</code></z><z class="line number71 index70 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>int</code> <code class=plain>n = nodes.Count;</code></z><z class="line number72 index71 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>buildTreeUtil(nodes, 0, n - 1);</code></z><z class="line number73 index72 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number74 index73 alt1">&nbsp;</z><z class="line number75 index74 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Function to do preorder traversal of tree */</code></z><z class="line number76 index75 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>virtual</code> <code class=keyword>void</code> <code class=plain>preOrder(Node node)</code></z><z class="line number77 index76 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number78 index77 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(node == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number79 index78 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number80 index79 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number81 index80 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number82 index81 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Console.Write(node.data + </code><code class=string>" "</code><code class=plain>);</code></z><z class="line number83 index82 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.left);</code></z><z class="line number84 index83 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.right);</code></z><z class="line number85 index84 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number86 index85 alt1">&nbsp;</z><z class="line number87 index86 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Driver program to test the above functions</code></z><z class="line number88 index87 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>public</code> <code class=keyword>static</code> <code class=keyword>void</code> <code class=plain>Main(</code><code class=keyword>string</code><code class=plain>[] args)</code></z><z class="line number89 index88 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number90 index89 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Constructed skewed binary tree is</code></z><z class="line number91 index90 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>10</code></z><z class="line number92 index91 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number93 index92 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>8</code></z><z class="line number94 index93 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number95 index94 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>7</code></z><z class="line number96 index95 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number97 index96 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>6</code></z><z class="line number98 index97 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number99 index98 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>5&nbsp;&nbsp; */</code></z><z class="line number100 index99 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>BinaryTree tree = </code><code class=keyword>new</code> <code class=plain>BinaryTree();</code></z><z class="line number101 index100 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root = </code><code class=keyword>new</code> <code class=plain>Node(10);</code></z><z class="line number102 index101 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left = </code><code class=keyword>new</code> <code class=plain>Node(8);</code></z><z class="line number103 index102 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left = </code><code class=keyword>new</code> <code class=plain>Node(7);</code></z><z class="line number104 index103 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(6);</code></z><z class="line number105 index104 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root.left.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(5);</code></z><z class="line number106 index105 alt1">&nbsp;</z><z class="line number107 index106 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.root = tree.buildTree(tree.root);</code></z><z class="line number108 index107 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>Console.WriteLine(</code><code class=string>"Preorder traversal of balanced BST is :"</code><code class=plain>);</code></z><z class="line number109 index108 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>tree.preOrder(tree.root);</code></z><z class="line number110 index109 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number111 index110 alt2"><code class=plain>}</code></z><z class="line number112 index111 alt1">&nbsp;</z><z class="line number113 index112 alt2"><code class="undefined spaces">&nbsp;&nbsp;</code><code class=comments>//&nbsp; This code is contributed by Shrikant13</code></z></z></td></tr></tbody></table></z></z><z class=code-editor-container></z></x></z><z class=code-output-container><z class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></x><xre class=output-pre></xre></x></z><z class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></x><xre id=ide-url></xre></x></z></x></z></z><h2 class=tabtitle>Javascript</h2><z class=tabcontent><z class=code-block><z class=code-gutter><z class=editor-buttons-container><z class=editor-buttons><z class=editor-buttons-div title="Run and Edit"><i id=copy-code-button title="Copy Code" class="gfg-icon gfg-icon_copy code-sidebar-button padding-2px copy-code-button"></i></x><z id=run-and-edit-loader class=ring-load></z><x><i id=run-and-edit-button title="Edit Code" lang=jscript class="gfg-icon gfg-icon_edit_1 padding-2px code-sidebar-button"></i><br><i id=close-code-editor-button title="Close Editor" class="gfg-icon gfg-icon_close-editor padding-2px code-sidebar-button close-code-editor-button"></i></x><z id=run-code-loader class=ring-load></z><x><i id=run-code-button lang=jscript title="Run Code and See Output" class="gfg-icon gfg-icon_play padding-2px code-sidebar-button"></i></x><z id=generate-url-loader class=ring-load></z><x><i id=generate-url-and-run-button title="Run Code and Generate IDE URL" lang=jscript class="gfg-icon gfg-icon_link padding-2px code-sidebar-button generate-url-and-run-button"></i><br><i title="Dark Mode" class="gfg-icon gfg-icon_dark-toggle padding-2px code-sidebar-button dark-editor-button"></i><br><i id=edit-on-ide-button title="Edit on IDE" lang=jscript class="gfg-icon gfg-icon_code padding-2px code-sidebar-button edit-on-ide-button"></i></z></x></z></x></z></x></z><z class=code-container><z id=highlighter_804090 class="syntaxhighlighter nogutter"><table border=0 cellpadding=0 cellspacing=0><tbody><tr><td class=code><z class=container><z class="line number1 index0 alt2"><code class=plain>&lt;script></code></z><z class="line number2 index1 alt1">&nbsp;</z><z class="line number3 index2 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// JavaScript program to convert a left</code></z><z class="line number4 index3 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// unbalanced BST to a balanced BST</code></z><z class="line number5 index4 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number6 index5 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>class Node</code></z><z class="line number7 index6 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number8 index7 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>constructor(data) {</code></z><z class="line number9 index8 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>this</code><code class=plain>.left = </code><code class=keyword>null</code><code class=plain>;</code></z><z class="line number10 index9 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>this</code><code class=plain>.right = </code><code class=keyword>null</code><code class=plain>;</code></z><z class="line number11 index10 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>this</code><code class=plain>.data = data;</code></z><z class="line number12 index11 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number13 index12 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number14 index13 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number15 index14 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>let root;</code></z><z class="line number16 index15 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number17 index16 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* This function traverse the skewed binary tree and</code></z><z class="line number18 index17 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>stores its nodes pointers in vector nodes[] */</code></z><z class="line number19 index18 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>function</code> <code class=plain>storeBSTNodes(root, nodes)</code></z><z class="line number20 index19 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number21 index20 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Base case</code></z><z class="line number22 index21 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(root == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number23 index22 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number24 index23 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number25 index24 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes in Inorder (which is sorted</code></z><z class="line number26 index25 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// order for BST)</code></z><z class="line number27 index26 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.left, nodes);</code></z><z class="line number28 index27 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>nodes.push(root);</code></z><z class="line number29 index28 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root.right, nodes);</code></z><z class="line number30 index29 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number31 index30 alt2"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number32 index31 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Recursive function to construct binary tree */</code></z><z class="line number33 index32 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>function</code> <code class=plain>buildTreeUtil(nodes, start, end)</code></z><z class="line number34 index33 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number35 index34 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// base case</code></z><z class="line number36 index35 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(start > end)</code></z><z class="line number37 index36 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=keyword>null</code><code class=plain>;</code></z><z class="line number38 index37 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number39 index38 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Get the middle element and make it root */</code></z><z class="line number40 index39 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>let mid = parseInt((start + end) / 2, 10);</code></z><z class="line number41 index40 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>let node = nodes[mid];</code></z><z class="line number42 index41 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number43 index42 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Using index in Inorder traversal, construct</code></z><z class="line number44 index43 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>left and right subtress */</code></z><z class="line number45 index44 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.left = buildTreeUtil(nodes, start, mid - 1);</code></z><z class="line number46 index45 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>node.right = buildTreeUtil(nodes, mid + 1, end);</code></z><z class="line number47 index46 alt2"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number48 index47 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>node;</code></z><z class="line number49 index48 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number50 index49 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number51 index50 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// This functions converts an unbalanced BST to</code></z><z class="line number52 index51 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// a balanced BST</code></z><z class="line number53 index52 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>function</code> <code class=plain>buildTree(root)</code></z><z class="line number54 index53 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number55 index54 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Store nodes of given BST in sorted order</code></z><z class="line number56 index55 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>let nodes = [];</code></z><z class="line number57 index56 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>storeBSTNodes(root, nodes);</code></z><z class="line number58 index57 alt1"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number59 index58 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>// Constructs BST from nodes[]</code></z><z class="line number60 index59 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>let n = nodes.length;</code></z><z class="line number61 index60 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code> <code class=plain>buildTreeUtil(nodes, 0, n - 1);</code></z><z class="line number62 index61 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number63 index62 alt2"><code class="undefined spaces">&nbsp;&nbsp;</code>&nbsp;</z><z class="line number64 index63 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Function to do preorder traversal of tree */</code></z><z class="line number65 index64 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>function</code> <code class=plain>preOrder(node)</code></z><z class="line number66 index65 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>{</code></z><z class="line number67 index66 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>if</code> <code class=plain>(node == </code><code class=keyword>null</code><code class=plain>)</code></z><z class="line number68 index67 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=keyword>return</code><code class=plain>;</code></z><z class="line number69 index68 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>document.write(node.data + </code><code class=string>" "</code><code class=plain>);</code></z><z class="line number70 index69 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.left);</code></z><z class="line number71 index70 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(node.right);</code></z><z class="line number72 index71 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>}</code></z><z class="line number73 index72 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number74 index73 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/* Constructed skewed binary tree is</code></z><z class="line number75 index74 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>10</code></z><z class="line number76 index75 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number77 index76 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>8</code></z><z class="line number78 index77 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number79 index78 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>7</code></z><z class="line number80 index79 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number81 index80 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>6</code></z><z class="line number82 index81 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>/</code></z><z class="line number83 index82 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=comments>5&nbsp;&nbsp; */</code></z><z class="line number84 index83 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root = </code><code class=keyword>new</code> <code class=plain>Node(10);</code></z><z class="line number85 index84 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left = </code><code class=keyword>new</code> <code class=plain>Node(8);</code></z><z class="line number86 index85 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left = </code><code class=keyword>new</code> <code class=plain>Node(7);</code></z><z class="line number87 index86 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(6);</code></z><z class="line number88 index87 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root.left.left.left.left = </code><code class=keyword>new</code> <code class=plain>Node(5);</code></z><z class="line number89 index88 alt2">&nbsp;</z><z class="line number90 index89 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>root = buildTree(root);</code></z><z class="line number91 index90 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>document.write(</code><code class=string>"Preorder traversal of balanced BST is :"</code> <code class=plain>+ </code><code class=string>"&lt;/br>"</code><code class=plain>);</code></z><z class="line number92 index91 alt1"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=plain>preOrder(root);</code></z><z class="line number93 index92 alt2"><code class="undefined spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</z><z class="line number94 index93 alt1"><code class=plain>&lt;/script></code></z></z></td></tr></tbody></table></z></z><z class=code-editor-container></z></x></z><z class=code-output-container><z class=output-block><i id=output-icon title=Output class="gfg-icon gfg-icon_arrow-right-editor padding-2px code-sidebar-button output-icon"></i></x><xre class=output-pre></xre></x></z><z class=ide-link-div><i id=copy-url-button title="Copy Generated Ide URL" class="gfg-icon gfg-icon_copy padding-2px code-sidebar-button copy-url-button"></i></x><xre id=ide-url></xre></x></z></x></z></z></z><z class=code-output><strong>Output</strong></x><xre>Preorder traversal of balanced BST is : 7 5 6 8 10 </xre></z><x><iframe width=665 height=374 src="https://www.youtube.com/embed/ElUqyFsddvo?feature=oembed" frameborder=0 allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></x><x>This article is contributed <strong>Aditya Goel</strong>. If you likeNosy.com and would like to contribute, you can also write an article and mail your article to review-team@n0sy.com. See your article appearing on the Nosy.com main page and help other Geeks.</x><z class=textBasedMannualAds_2></z><br><z id=AP_G4GR_6></z><z id=personalNoteDiv class="clear hideIt"><z class="personalNoteHeader clear"><y class=noteHeaderText>My Personal Notes</y>
<y class=hideNotesDivIcon><i class="material-icons personalNotesIcon">arrow_drop_up</i></y></z><z class=collapsableDivPersonalNotes><textarea maxlength=5000 id=enteredPersonalNote class=personalNoteStyle placeholder="Add your personal notes here! (max 5000 chars)"></textarea><z class=saveNoteDiv><y class=processSaveNote></y><button class=savePersonalNoteButton onclick=saveUserPersonalNote()>Save</button></z></z></z></z></article><z class=article-meta><z class=vote-wrap><z style=display:flex;align-items:center;justify-content:center;width:100%><button data-type=like class=vote-this style=margin-right:0;margin-left:0>
<i class="gfg-icon gfg-icon_like favoriteIcon"></i>
<y class=favoriteLike>Like</y><figure class=favoriteText></figure></button></z></z><z class="d-row content-bw article-pgnavi v-divider-gfg"><z class=article-pgnavi_prev><a href=https://www.n0sy.com/threaded-binary-search-tree-deletion/ class=pg-head><y class="gfg-icon gfg-icon_previous"></y><y style=margin-left:5px>Previous</y></a><z class=pg-main><a href=https://www.n0sy.com/threaded-binary-search-tree-deletion/>Threaded Binary Search Tree | Deletion</a></z></z><z class=article-pgnavi_next><a href=https://www.n0sy.com/how-to-handle-duplicates-in-binary-search-tree/ class=pg-head><y style=margin-right:5px;margin-left:auto>Next</y>
<y class="gfg-icon gfg-icon_next"></y></a><z class=pg-main><a href=https://www.n0sy.com/how-to-handle-duplicates-in-binary-search-tree/>How to handle duplicates in Binary Search Tree?</a></z></z></z></z><z class=article--recommended><z class=article--recommended_wrapper><z class=top-bar><z class="def-title_wrap pl-0"><z class="title large">Recommended Articles</z></z><z class=page-list><z class=page-h>Page :</z><z class=pages></z></z></z><z class=gfg--carousel><z class=gfg--carousel_wrap data-flex=2><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/comparison-between-height-balanced-tree-and-weight-balanced-tree/?ref=rp" title="Permalink to Comparison between Height Balanced Tree and Weight Balanced Tree" rel=bookmark class=c-wrap><z class=head>Comparison between Height Balanced Tree and Weight Balanced Tree</z><z class=meta>27, Dec 21</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/split-a-bst-into-two-balanced-bsts-based-on-a-value-k/?ref=rp" title="Permalink to Split a BST into two balanced BSTs based on a value K" rel=bookmark class=c-wrap><z class=head>Split a BST into two balanced BSTs based on a value K</z><z class=meta>19, Apr 20</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/check-if-the-binary-tree-contains-a-balanced-bst-of-size-k/?ref=rp" title="Permalink to Check if the Binary Tree contains a balanced BST of size K" rel=bookmark class=c-wrap><z class=head>Check if the Binary Tree contains a balanced BST of size K</z><z class=meta>06, Jul 20</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/create-a-balanced-bst-using-vector-in-c-stl/?ref=rp" title="Permalink to Create a balanced BST using vector in C++ STL" rel=bookmark class=c-wrap><z class=head>Create a balanced BST using vector in C++ STL</z><z class=meta>26, Dec 21</z></a></z></z></z><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/find-if-there-is-a-triplet-in-bst-that-adds-to-0/?ref=rp" title="Permalink to Find if there is a triplet in a Balanced BST that adds to zero" rel=bookmark class=c-wrap><z class=head>Find if there is a triplet in a Balanced BST that adds to zero</z><z class=meta>09, Mar 13</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/sorted-linked-list-to-balanced-bst/?ref=rp" title="Permalink to Sorted Linked List to Balanced BST" rel=bookmark class=c-wrap><z class=head>Sorted Linked List to Balanced BST</z><z class=meta>17, Jan 12</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/find-a-pair-with-given-sum-in-bst/?ref=rp" title="Permalink to Find a pair with given sum in a Balanced BST" rel=bookmark class=c-wrap><z class=head>Find a pair with given sum in a Balanced BST</z><z class=meta>10, Mar 13</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/sorted-array-to-balanced-bst/?ref=rp" title="Permalink to Sorted Array to Balanced BST" rel=bookmark class=c-wrap><z class=head>Sorted Array to Balanced BST</z><z class=meta>18, Jan 12</z></a></z></z></z><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/two-nodes-of-a-bst-are-swapped-correct-the-bst-set-2/?ref=rp" title="Permalink to Two nodes of a BST are swapped, correct the BST | Set-2" rel=bookmark class=c-wrap><z class=head>Two nodes of a BST are swapped, correct the BST | Set-2</z><z class=meta>12, Jun 19</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/kth-largest-element-in-bst-when-modification-to-bst-is-not-allowed/?ref=rp" title="Permalink to K\'th Largest Element in BST when modification to BST is not allowed" rel=bookmark class=c-wrap><z class=head>K\'th Largest Element in BST when modification to BST is not allowed</z><z class=meta>19, Mar 15</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/find-k-th-smallest-element-in-bst-order-statistics-in-bst/?ref=rp" title="Permalink to Find k-th smallest element in BST (Order Statistics in BST)" rel=bookmark class=c-wrap><z class=head>Find k-th smallest element in BST (Order Statistics in BST)</z><z class=meta>15, Feb 11</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/fix-two-swapped-nodes-of-bst/?ref=rp" title="Permalink to Two nodes of a BST are swapped, correct the BST" rel=bookmark class=c-wrap><z class=head>Two nodes of a BST are swapped, correct the BST</z><z class=meta>14, Sep 12</z></a></z></z></z><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/convert-a-binary-tree-to-bst-by-left-shifting-digits-of-node-values/?ref=rp" title="Permalink to Convert a Binary Tree to BST by left shifting digits of node values" rel=bookmark class=c-wrap><z class=head>Convert a Binary Tree to BST by left shifting digits of node values</z><z class=meta>20, Jan 21</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/convert-bst-to-a-binary-tree/?ref=rp" title="Permalink to Convert a BST to a Binary Tree such that sum of all greater keys is added to every key" rel=bookmark class=c-wrap><z class=head>Convert a BST to a Binary Tree such that sum of all greater keys is added to every key</z><z class=meta>01, Jan 13</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/in-place-convert-bst-into-a-min-heap/?ref=rp" title="Permalink to Convert BST into a Min-Heap without using array" rel=bookmark class=c-wrap><z class=head>Convert BST into a Min-Heap without using array</z><z class=meta>08, Jun 16</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/convert-bst-min-heap/?ref=rp" title="Permalink to Convert BST to Min Heap" rel=bookmark class=c-wrap><z class=head>Convert BST to Min Heap</z><z class=meta>17, Jun 17</z></a></z></z></z><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/convert-bst-to-max-heap/?ref=rp" title="Permalink to Convert BST to Max Heap" rel=bookmark class=c-wrap><z class=head>Convert BST to Max Heap</z><z class=meta>08, Jun 18</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/create-balanced-binary-tree-using-its-leaf-nodes-without-using-extra-space/?ref=rp" title="Permalink to Create Balanced Binary Tree using its Leaf Nodes without using extra space" rel=bookmark class=c-wrap><z class=head>Create Balanced Binary Tree using its Leaf Nodes without using extra space</z><z class=meta>12, Jun 20</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/count-balanced-nodes-present-in-a-binary-tree/?ref=rp" title="Permalink to Count balanced nodes present in a binary tree" rel=bookmark class=c-wrap><z class=head>Count balanced nodes present in a binary tree</z><z class=meta>21, Sep 20</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/sum-of-specially-balanced-nodes-from-a-given-binary-tree/?ref=rp" title="Permalink to Sum of specially balanced nodes from a given Binary Tree" rel=bookmark class=c-wrap><z class=head>Sum of specially balanced nodes from a given Binary Tree</z><z class=meta>04, Oct 20</z></a></z></z></z><z class=gfg--carousel_wrap-slide><z class=slide-item_list><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/number-of-levels-having-balanced-parentheses-in-a-binary-tree/?ref=rp" title="Permalink to Number of levels having balanced parentheses in a Binary Tree" rel=bookmark class=c-wrap><z class=head>Number of levels having balanced parentheses in a Binary Tree</z><z class=meta>24, Feb 21</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/introduction-to-height-balanced-binary-tree/?ref=rp" title="Permalink to Introduction to Height Balanced Binary Tree" rel=bookmark class=c-wrap><z class=head>Introduction to Height Balanced Binary Tree</z><z class=meta>19, May 22</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/check-given-binary-tree-follows-height-property-red-black-tree/?ref=rp" title="Permalink to Check if a given Binary Tree is height balanced like a Red-Black Tree" rel=bookmark class=c-wrap><z class=head>Check if a given Binary Tree is height balanced like a Red-Black Tree</z><z class=meta>27, Feb 14</z></a></z><z class=slide-item><z class=sno></z><a href="https://www.n0sy.com/practice-questions-height-balancedavl-tree/?ref=rp" title="Permalink to Practice questions on Height balanced/AVL Tree" rel=bookmark class=c-wrap><z class=head>Practice questions on Height balanced/AVL Tree</z><z class=meta>05, Feb 18</z></a></z></z></z></z></z><z class=gfg--carousel_dots><z class=carousel--dots></z></z></z></z><z class=article-meta><z class="bottom-wrap d-row divider-gfg" style=margin-top:0><z class=credits><z class=by>Article Contributed By :</z><z class=media><z class=author><z class=image-wrap><img src=https://media.n0sy.com/wp-content/uploads/20200717172614/authPreLogo.png style=width:45px;height:45px class="img-fluid restrict-popup-gfg" alt=https://media.n0sy.com/auth/avatar.png></z><z class=info><z class=name><a href=javascript:void(0) rel=nofollow style=font-size:12.5pt>Nosy.com</a></z></z></z></z></z><z class=vote-block><z class=vote-d>Vote for difficulty</z><z class=vote-s>Current difficulty :
<a href=https://www.n0sy.com/medium/>Medium</a></z><z class=d-column style=margin-top:20px><z class="label-list without-bg"><button data-gfg-action=article-difficulty data-rating=1 class=btn>Easy</button>
<button data-gfg-action=article-difficulty data-rating=2 class=btn>Normal</button>
<button data-gfg-action=article-difficulty data-rating=3 class=btn>Medium</button>
<button data-gfg-action=article-difficulty data-rating=4 class=btn>Hard</button>
<button data-gfg-action=article-difficulty data-rating=5 class=btn>Expert</button></z><z class=gfg-process style=margin-top:10px;font-size:10pt;font-family:var(--font-din)></z></z></z></z><z class=bottom-wrap><z class=improved><z class=t-head>Improved By :</z><ul><li><a href=https://auth.n0sy.com/user/shrikanth13>shrikanth13</a></li><li><a href="https://auth.n0sy.com/user/Vikash Kumar 37">Vikash Kumar 37</a></li><li><a href=https://auth.n0sy.com/user/suresh07>suresh07</a></li><li><a href=https://auth.n0sy.com/user/clintra>clintra</a></li><li><a href=https://auth.n0sy.com/user/hardikkoriintern>hardikkoriintern</a></li></ul></z><z class=improved><z class=t-head>Article Tags :</z><ul><li><a href=https://www.n0sy.com/category/data-structures/binary-search-tree/>Binary Search Tree</a></li><li><a href=https://www.n0sy.com/category/data-structures/tree/>Tree</a></li></ul></z><z class=improved><z class=t-head>Practice Tags :</z><ul><li><a href="https://practice.n0sy.com/explore?category[]=Binary" search tree>Binary Search Tree</a></li><li><a href="https://practice.n0sy.com/explore?category[]=Tree">Tree</a></li></ul></z></z><z class=bottom-wrap><z class=improveArticleWrap><z pid=137663 ptitle="Convert a normal BST to Balanced BST" id=improveArticleButtonDiv></z><a href=mailto:review-team@n0sy.com class=reportButton>Report Issue</a></z></z></z></z><z><z class=disqus--viewer><z id=ide_link style=text-align:center;margin-top:50px><x style=text-align:center>Writing code in comment?
Please use <a href=https://ide.n0sy.com/>ide.n0sy.com</a>,
generate link and share the link here.</a></x></z><br><z class=disqus-comment><button id=comment class=action-button style="width:45%;cursor:pointer;margin-right:0%;box-shadow:0 2px 5px rgba(0,0,0,.4),0 6px 20px transparent;border-color:#4cb96b;border-radius:4px">
Load Comments</button></z><z style=height:100% class=bottom-comment-section hidden><z id=login-link style="padding:10px 0 20px 16px"><h5>Please <u><y class=login-modal-btn style=cursor:pointer>Login</y></u> to comment...</h5></z><z style=height:100%><z style=height:100% id=comment-system></z></z></z></z></z></z></z></z><z class=rightBar><z id=secondary class=widget-area role=complementary><aside id=text-15 class="widget widget_text"><z class=textwidget><style>#text-15{flex-direction:column}.mtq_correct_marker,.mtq_wrong_marker{display:none}.sidebar_wrapper>:last-child{margin:unset!important;margin-left:5px!important;margin-top:20px!important;top:70px!important}.darkMode-wrap{bottom:1%!important}#secondary .textwidget{margin-left:auto;margin-right:0;text-align:right}#secondary .widget_text:last-child{top:70px!important}</style><z id=GFG_AD_Desktop_RightSideBar_ATF_300x600 style=min-width:300px;min-height:600px;margin-bottom:10px></z><z id=GFG_AD_Desktop_RightSideBar_ATF_300x250_2 style=min-width:300px;min-height:250px></z></z></aside><z class=rba_all_pages id=whatsNewCardContainer><z class=heading><z class=def-title_wrap><z class=title>What\'s New</z><z id=edit-icon></z></z></z><z class=card-layout><z class=content-wrapper><z class=side--container_wscard><a href="https://practice.n0sy.com/courses/dsa-self-paced?utm_source=right-bar&utm_medium=gfg&utm_campaign=dsa&utm_term=dsa"><z class=card-content><z class=thumbnail><img src="https://media.n0sy.com/wp-content/post-ads-banner/2021-12-29-11-18-16-DSA_Ad_icon (1).png" class=img-fluid></z><z class=content><z class=head>Data Structures & Algorithms- Self Paced Course</z><z class=meta></z><z class=ref>View Details</z></z></z></a></z></z></z><z class=card-layout><z class=content-wrapper><z class=side--container_wscard style=margin-top:-25px><a href="https://practice.n0sy.com/courses/complete-interview-preparation?utm_source=right-bar&utm_medium=gfg&utm_campaign=dsa&utm_term=dsa"><z class=card-content><z class=thumbnail><img src=https://media.n0sy.com/wp-content/post-ads-banner/2021-12-29-16-30-50-CIP_Icon.png class=img-fluid></z><z class=content><z class=head>Complete Interview Preparation- Self Paced Course</z><z class=meta></z><z class=ref>View Details</z></z></z></a></z></z></z><z class=card-layout style=margin-bottom:20px><z class=content-wrapper><z class=side--container_wscard style=margin-top:-25px><a href="https://practice.n0sy.com/explore?page=1&curated[]=1&sortBy=submissions&utm_source=gfg&utm_medium=right-bar&utm_campaign=practice_problems"><z class=card-content><z class=thumbnail><img src=https://media.n0sy.com/wp-content/post-ads-banner/2022-07-27-23-40-15-image.png class=img-fluid></z><z class=content><z class=head>Practice Problems, POTD Streak, Weekly Contests & More!</z><z class=meta></z><z class=ref>View Details</z></z></z></a></z></z></z></z><script>$(document).ready(function(){var a=!1,b;window.innerWidth>992&&!a&&(b=$(\'#whatsNewCardContainer .card-layout:last-child\').html(),$(\'#whatsNewCardContainer .card-layout:last-child\').hide(),$(\'#secondary\').prepend(`<z class=\'card-layout\'>${b}</z>`),a=!0),$(window).resize(function(){if(window.innerWidth>992){if(!a){var b=$(\'#whatsNewCardContainer .card-layout:last-child\').html();$(\'#whatsNewCardContainer .card-layout:last-child\').hide(),$(\'#secondary\').prepend(`<z class=\'card-layout\'>${b}</z>`),a=!0}}else $(\'#secondary .card-layout:first-child\').hide(),$(\'#whatsNewCardContainer .card-layout:last-child\').show(),a=!1})})</script><aside id=text-16 class="widget widget_text"><z class=textwidget><z id=GFG_AD_Desktop_ATF_300x100 style=min-width:300px;min-height:100px;margin-bottom:10px></z><z id=GFG_AD_Desktop_RightSideBar_MTF_300x250 style=min-width:300px;min-height:250px></z></z></aside><aside id=text-18 class="widget widget_text"><z class=textwidget><z id=GFG_AD_Desktop_RightSideBar_Docked_160x600 style=min-width:300px;min-height:600px></z></z></aside></z></z></z><section class=disqus-section><z class=article-page_flex><z class=leftBar></z></z></section></z><z id=video-popup style=display:none></z></z><z id=displayModal class="modal fade" role=dialog><z class=modal-dialog><z class=upper-box><h3 style="font:700 18px/31px var(--font-sofia);color:var(--color-black)">Improve your Coding Skills with Practice</h3><button class=upper-box-btn><a style=color:#fff!important href="https://practice.n0sy.com/explore?page=1&sortBy=submissions&utm_source=gfg&utm_medium=search-bar&utm_campaign=practice-search">Try It!</a></button></z><z class=modal-content><z class=error-message></z><z class=modal-body id=dmBody><z id=modal-dm-content></z><z class=modal-overlay aria-hidden=true><y class=loader__animation></y></z></z><z class=modal-footer></z></z></z></z><z id=displayModalBackdrop class=backdrop></z><footer class=gfg-footer id=gfg-footer><z class=footer-wrapper><z class=footer-wrapper_branding><a class=footer-wrapper_branding-anchor href=https://www.n0sy.com/><svg class="footer-wrapper_branding-nlogo" id="Group_230" data-name="Group 230" xmlns="https://www.w3.org/2000/svg" width="300.826" height="39.577" viewBox="0 0 300.826 39.577"><g id="logo" transform="translate(-3608 -227)"><g id="Group_155" data-name="Group 155" transform="translate(3608 227)"><xath id="Path_242" data-name="Path 242" d="M988.871 586.642h-32.7a13.06 13.06.0 0122.949-6.9l4.757-4.783a19.789 19.789.0 00-34.466 11.678H949.3a19.789 19.789.0 00-34.466-11.678l4.757 4.783a13.06 13.06.0 0122.949 6.9h-32.7q-.057.757-.058 1.529a19.791 19.791.0 0039.055 4.533h1.042a19.789 19.789.0 0039.055-4.533Q988.929 587.4 988.871 586.642zm-59.305 14.589a13.063 13.063.0 01-12.261-8.555h24.522A13.064 13.064.0 01929.565 601.231zm39.576.0a13.064 13.064.0 01-12.262-8.555H981.4A13.063 13.063.0 01969.141 601.231z" transform="translate(-909.777 -568.383)" fill="#2f8d46"/></g><g id="Group_170" data-name="Group 170" transform="translate(3703.022 236.148)"><g id="Group_156" data-name="Group 156" transform="translate(26.144 4.527)"><line id="Line_1" data-name="Line 1" x1="1.046" fill="#0f2b3c"/></g><g id="Group_157" data-name="Group 157" transform="translate(56.695 0.004)"><xath id="Path_243" data-name="Path 243" d="M1352.9 615.759l-6.714-6.771v6.771h-3.09V594.521h3.09v12.53l6.084-6.056h3.909l-6.988 6.988 7.67 7.782z" transform="translate(-1343.095 -594.521)" fill="#0f2b3c"/></g><g id="Group_158" data-name="Group 158" transform="translate(113.247 6.427)"><xath id="Path_244" data-name="Path 244" d="M1504.614 627.712V612.948h3.09v2.558a3.7 3.7.0 011.447-1.91 3.9 3.9.0 012.262-.73 5.447 5.447.0 011.208.112l-.7 3a2.449 2.449.0 00-.842-.082 3.044 3.044.0 00-2.388 1.138 4.676 4.676.0 00-.983 3.16v7.515z" transform="translate(-1504.614 -612.865)" fill="#0f2b3c"/></g><g id="Group_159" data-name="Group 159" transform="translate(70.943 6.509)"><xath id="Path_245" data-name="Path 245" d="M1385.943 626.817a5.668 5.668.0 01-2.152-2.683l2.669-1.171a3.743 3.743.0 001.376 1.662 3.657 3.657.0 002.029.572 4.049 4.049.0 001.879-.395 1.266 1.266.0 00.763-1.185 1.367 1.367.0 00-.654-1.2 6.492 6.492.0 00-2.016-.763l-1.662-.409a5.974 5.974.0 01-2.752-1.444 3.452 3.452.0 01-1.089-2.615 3.4 3.4.0 01.722-2.152 4.647 4.647.0 011.948-1.43 6.957 6.957.0 012.67-.5 7.191 7.191.0 013.405.776 4.6 4.6.0 012.125 2.247l-2.615 1.144a2.925 2.925.0 00-2.888-1.608 3.231 3.231.0 00-1.689.409 1.213 1.213.0 00-.681 1.063 1.226 1.226.0 00.518 1.021 4.442 4.442.0 001.526.667l2.043.518a6.573 6.573.0 013.092 1.566 3.5 3.5.0 011.049 2.575 3.72 3.72.0 01-.749 2.3 4.829 4.829.0 01-2.057 1.539 7.44 7.44.0 01-2.887.545A6.781 6.781.0 011385.943 626.817z" transform="translate(-1383.791 -613.101)" fill="#0f2b3c"/></g><g id="Group_160" data-name="Group 160" transform="translate(96.285 6.525)"><xath id="Path_246" data-name="Path 246" d="M1463.543 613.146a7.374 7.374.0 107.374 7.374A7.374 7.374.0 001463.543 613.146zm0 11.532a4.228 4.228.0 114.228-4.228A4.228 4.228.0 011463.543 624.678z" transform="translate(-1456.169 -613.146)" fill="#0f2b3c"/></g><g id="Group_161" data-name="Group 161" transform="translate(23.011 6.524)"><xath id="Path_247" data-name="Path 247" d="M1261.615 621.145c.017-.232.027-.466.024-.7a7.292 7.292.0 00-.212-1.685 7.375 7.375.0 00-14.537 1.84c0 .236.017.47.04.7a7.263 7.263.0 00.673 2.382 7.374 7.374.0 0013.389-.141l-3.267.034a4.617 4.617.0 01-8.014-2.3zm-11.664-2.266a4.614 4.614.0 018.592-.09z" transform="translate(-1246.891 -613.144)" fill="#0f2b3c"/></g><g id="Group_162" data-name="Group 162" transform="translate(39.461 6.524)"><xath id="Path_248" data-name="Path 248" d="M1308.6 621.145c.017-.232.027-.466.025-.7a7.375 7.375.0 10-14.749.155c0 .236.017.47.04.7a7.257 7.257.0 00.672 2.382 7.375 7.375.0 0013.39-.141l-3.268.034a4.616 4.616.0 01-8.014-2.3zm-11.663-2.266a4.614 4.614.0 018.592-.09z" transform="translate(-1293.873 -613.144)" fill="#0f2b3c"/></g><g id="Group_163" data-name="Group 163" transform="translate(85.044 0.245)"><xath id="Path_249" data-name="Path 249" d="M1430.636 598.566a2.5 2.5.0 011.8-.549 4.2 4.2.0 011.657.281v-2.752a7.24 7.24.0 00-2.3-.337 4.82 4.82.0 00-3.455 1.278 4.666 4.666.0 00-1.349 3.554v1.417h-2.922v2.752h2.922v12.036h3.091V604.209h4.016v-2.752h-4.016V600.4A2.5 2.5.0 011430.636 598.566z" transform="translate(-1424.063 -595.209)" fill="#0f2b3c"/></g><g id="Group_164" data-name="Group 164" transform="translate(0)"><xath id="Path_250" data-name="Path 250" d="M1202.443 605.147a10.637 10.637.0 11-2.72-7.1l-1.983 1.982a7.837 7.837.0 101.656 7.09h-6.883v-2.851h9.895Q1202.443 604.7 1202.443 605.147z" transform="translate(-1181.169 -594.51)" fill="#0f2b3c"/></g><g id="Group_165" data-name="Group 165" transform="translate(179.788 0.004)"><xath id="Path_251" data-name="Path 251" d="M1704.467 615.759l-6.714-6.771v6.771h-3.09V594.521h3.09v12.53l6.084-6.056h3.909l-6.988 6.988 7.669 7.782z" transform="translate(-1694.663 -594.521)" fill="#0f2b3c"/></g><g id="Group_166" data-name="Group 166" transform="translate(194.036 6.509)"><xath id="Path_252" data-name="Path 252" d="M1737.51 626.817a5.667 5.667.0 01-2.152-2.683l2.67-1.171a3.742 3.742.0 001.375 1.662 3.658 3.658.0 002.03.572 4.051 4.051.0 001.88-.395 1.267 1.267.0 00.763-1.185 1.367 1.367.0 00-.654-1.2 6.492 6.492.0 00-2.016-.763l-1.662-.409a5.974 5.974.0 01-2.751-1.444 3.451 3.451.0 01-1.09-2.615 3.4 3.4.0 01.722-2.152 4.651 4.651.0 011.948-1.43 6.96 6.96.0 012.67-.5 7.191 7.191.0 013.405.776 4.6 4.6.0 012.125 2.247l-2.615 1.144a2.926 2.926.0 00-2.888-1.608 3.232 3.232.0 00-1.689.409 1.214 1.214.0 00-.681 1.063 1.227 1.227.0 00.518 1.021 4.443 4.443.0 001.526.667l2.043.518a6.576 6.576.0 013.092 1.566 3.5 3.5.0 011.049 2.575 3.719 3.719.0 01-.749 2.3 4.833 4.833.0 01-2.057 1.539 7.44 7.44.0 01-2.888.545A6.781 6.781.0 011737.51 626.817z" transform="translate(-1735.358 -613.101)" fill="#0f2b3c"/></g><g id="Group_167" data-name="Group 167" transform="translate(146.104 6.524)"><xath id="Path_253" data-name="Path 253" d="M1613.182 621.145c.017-.232.027-.466.025-.7a7.375 7.375.0 10-14.749.155c0 .236.017.47.04.7a7.254 7.254.0 00.673 2.382 7.375 7.375.0 0013.389-.141l-3.268.034a4.616 4.616.0 01-8.014-2.3zm-11.663-2.266a4.615 4.615.0 018.592-.09z" transform="translate(-1598.458 -613.144)" fill="#0f2b3c"/></g><g id="Group_168" data-name="Group 168" transform="translate(162.554 6.524)"><xath id="Path_254" data-name="Path 254" d="M1660.165 621.145c.017-.232.027-.466.024-.7a7.375 7.375.0 10-14.749.155c0 .236.017.47.04.7a7.266 7.266.0 00.673 2.382 7.375 7.375.0 0013.389-.141l-3.268.034a4.616 4.616.0 01-8.014-2.3zm-11.663-2.266a4.614 4.614.0 018.592-.09z" transform="translate(-1645.44 -613.144)" fill="#0f2b3c"/></g><g id="Group_169" data-name="Group 169" transform="translate(123.093)"><xath id="Path_255" data-name="Path 255" d="M1554.01 605.147a10.636 10.636.0 11-2.72-7.1l-1.983 1.982a7.837 7.837.0 101.656 7.09h-6.884v-2.851h9.895Q1554.01 604.7 1554.01 605.147z" transform="translate(-1532.736 -594.51)" fill="#0f2b3c"/></g></g></g></svg></a><z class=footer-wrapper_branding-address><i class="gfg-icon gfg-icon_pin"></i>
<y>A-143, 9th Floor, Sovereign Corporate Tower,<br>Sector-136, Noida, Uttar Pradesh - 201305</y></z><z class=footer-wrapper_branding-email><i class="gfg-icon gfg-icon_mail"></i>
<a href=mailto:feedback@n0sy.com>feedback@n0sy.com</a></z><z class=footer-wrapper_branding-social><a href=https://www.facebook.com/n0sy.com/ rel="noopener noreferrer" aria-label="Nosy.com Facebook" target=_blank><z class=facebook></z></a><a href=https://www.instagram.com/geeks_for_geeks/ rel="noopener noreferrer" aria-label="Nosy.com Instagram" target=_blank><z class=instagram></z></a><a href=https://in.linkedin.com/company/Nosy.com rel="noopener noreferrer" aria-label="Nosy.com LinkedIn" target=_blank><z class=linkedin></z></a><a href=https://twitter.com/Nosy.com rel="noopener noreferrer" aria-label="Nosy.com Twitter" target=_blank><z class=twitter></z></a><a href=https://www.youtube.com/Nosy.comvideos rel="noopener noreferrer" aria-label="Nosy.com YouTube" target=_blank><z class=youtube></z></a><a href="https://play.google.com/store/apps/details?id=free.programming.programming" rel="noopener noreferrer" aria-label="Nosy.com App" target=_blank><z class=android></z></a></z></z><z class=footer-wrapper_links><ul class=footer-wrapper_links-list><li>Company</li><li><a href="https://www.n0sy.com/about/?ref=footer">About Us</a></li><li><a href=https://Nosy.com.zohorecruit.in/careers>Careers</a></li><li><a href="https://www.n0sy.com/press-release/?ref=footer">In Media</a></li><li><a href="https://www.n0sy.com/about/contact-us/?ref=footer">Contact Us</a></li><li><a href="https://www.n0sy.com/privacy-policy/?ref=footer">Privacy Policy</a></li><li><a href="https://www.n0sy.com/copyright-information/?ref=footer">Copyright Policy</a></li></ul><ul class=footer-wrapper_links-list><li>Learn</li><li><a href="https://www.n0sy.com/fundamentals-of-algorithms/?ref=footer">Algorithms</a></li><li><a href="https://www.n0sy.com/data-structures/?ref=footer">Data Structures</a></li><li><a href="https://www.n0sy.com/gfg-sde-sheet-a-complete-guide-for-sde-preparation/?ref=footer">SDE Cheat Sheet</a></li><li><a href="https://www.n0sy.com/machine-learning/?ref=footer">Machine learning</a></li><li><a href="https://www.n0sy.com/articles-on-computer-science-subjects-gq/?ref=footer">CS Subjects</a></li><li><a href="https://www.n0sy.com/videos/?ref=footer">Video Tutorials</a></li><li><a href="https://practice.n0sy.com/courses/?ref=footer">Courses</a></li></ul><ul class=footer-wrapper_links-list><li><a class=link-head href="https://news.n0sy.com/?ref=footer">News</a></li><li><a href="https://news.n0sy.com/top?ref=footer">Top News</a></li><li><a href="https://news.n0sy.com/technology?ref=footer">Technology</a></li><li><a href="https://news.n0sy.com/work-career?ref=footer">Work & Career</a></li><li><a href="https://news.n0sy.com/business?ref=footer">Business</a></li><li><a href="https://news.n0sy.com/finance?ref=footer">Finance</a></li><li><a href="https://news.n0sy.com/lifestyle?ref=footer">Lifestyle</a></li><li><a href="https://news.n0sy.com/knowledge?ref=footer">Knowledge</a></li></ul><ul class=footer-wrapper_links-list><li>Languages</li><li><a href="https://www.n0sy.com/python-programming-language/?ref=footer">Python</a></li><li><a href="https://www.n0sy.com/java/?ref=footer">Java</a></li><li><a href="https://www.n0sy.com/c-plus-plus/?ref=footer">CPP</a></li><li><a href="https://www.n0sy.com/golang/?ref=footer">Golang</a></li><li><a href="https://www.n0sy.com/csharp-programming-language/?ref=footer">C#</a></li><li><a href="https://www.n0sy.com/sql-tutorial/?ref=footer">SQL</a></li><li><a href="https://www.n0sy.com/kotlin-programming-language/?ref=footer">Kotlin</a></li></ul><ul class=footer-wrapper_links-list><li>Web Development</li><li><a href="https://www.n0sy.com/web-development/?ref=footer">Web Tutorials</a></li><li><a href="https://www.n0sy.com/django-tutorial/?ref=footer">Django Tutorial</a></li><li><a href="https://www.n0sy.com/html-tutorials/?ref=footer">HTML</a></li><li><a href="https://www.n0sy.com/javascript-tutorial/?ref=footer">JavaScript</a></li><li><a href="https://www.n0sy.com/bootstrap-tutorials/?ref=footer">Bootstrap</a></li><li><a href="https://www.n0sy.com/reactjs-tutorials/?ref=footer">ReactJS</a></li><li><a href="https://www.n0sy.com/nodejs/?ref=footer">NodeJS</a></li></ul><ul class=footer-wrapper_links-list><li>Contribute</li><li><a href="https://www.n0sy.com/contribute/?ref=footer">Write an Article</a></li><li><a href="https://www.n0sy.com/how-to-improve-an-article/?ref=footer">Improve an Article</a></li><li><a href="https://write.n0sy.com/pick-article?ref=footer">Pick Topics to Write</a></li><li><a href="https://www.n0sy.com/write-interview-experience/?ref=footer">Write Interview Experience</a></li><li><a href="https://www.n0sy.com/careers/?job_type=1&ref=footer">Internships</a></li><li><a href="https://script.n0sy.com/on-boarding/youtube?ref=footer">Video Internship</a></li></ul></z></z><z class=footer-strip><z class=copyright><a href=https://www.n0sy.com/ rel="noopener noreferrer" target=_blank>@Nosy.com</a>
<y>, <a href=https://www.n0sy.com/copyright-information/>Some rights reserved</a></y></z><z class=social-links></z></z></footer><z class=darkMode-wrap data-mode="Switch to Dark Mode"><button data-gfg-action=toggleGFGTheme>
<i class="gfg-icon gfg-icon_dark-mode"></i></button></z></z><script src="https://www.n0sy.com/wp-includes/js/wp-embed.min.js?ver=4.9.8"></script><script>jQuery(document).ready(function(a){RESPONSIVEUI.responsiveTabs()})</script><z class="cookie-consent hide-consent"><y class=cookie-text>We use cookies to ensure you have the best browsing experience on our website. By using our site, you
acknowledge that you have read and understood our
<a href=https://www.n0sy.com/cookie-policy/ target=_blank><u>Cookie Policy</u></a> & <a href=https://www.n0sy.com/privacy-policy/ target=_blank><u>Privacy Policy</u></a></y>
<button class=consent-btn>
Got It !</button></z><z class=lightbox-target><img id=lightbox-image src alt=Lightbox>
<y class=lightbox-close></y></z><z class=shell><z class=shell-container><z class=shell-container_content><h2>Start Your Coding Journey Now!</h2><z class=shell-container_actions><button title=Login data-gfg-action=login-modal>Login</button>
<button title=Register data-gfg-action=register-modal>Register</button></z></z></z></z><link rel=stylesheet href=https://use.typekit.net/mrg0hpc.css><script>try{var isAdblockEnabled=a=>fetch(new Request(\'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\',{method:\'HEAD\',mode:\'no-cors\'})).catch(a);isAdblockEnabled(()=>{var a=window.document.createElement(\'script\'),b=41782;a.setAttribute(\'src\',\'https://delivery.adrecover.com/\'.concat(b,\'/adRecover.js\')),a.setAttribute(\'type\',\'text/javascript\'),a.setAttribute(\'async\',!0),window.document.head.append(a)})}catch(a){console.log(a)}</script><z id=GFG_AD_gfg_mobile_320x50></z>')); ?>