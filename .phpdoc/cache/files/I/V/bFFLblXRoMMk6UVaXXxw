1687716134
waR3U4bTeM%3Adf3b63b29dec2e382fba75b7f7b54c43-130e2f26c332ded130a97aabd6c4b0b7
s:5864:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDE6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tCgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjEzMGUyZjI2YzMzMmRlZDEzMGE5N2FhYmQ2YzRiMGI3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6ImNyZWF0ZS1sYW5nLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQzOiJjb2NrcGl0L21vZHVsZXMvQ29ja3BpdC9jbGkvY3JlYXRlLWxhbmcucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyNDIxOiI8P3BocA0KLyoqDQogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ29ja3BpdCBwcm9qZWN0Lg0KICoNCiAqIChjKSBBcnR1ciBIZWluemUgLSDwn4Ww8J+FtvCfhbTwn4W98J+Gg/CfhbTwn4W58J+FviwgaHR0cDovL2FnZW50ZWpvLmNvbQ0KICoNCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFDQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4NCiAqLw0KDQppZiAoIUNPQ0tQSVRfQ0xJKSByZXR1cm47DQoNCiRsYW5nICAgICA9ICRhcHAtPnBhcmFtKCdsYW5nJywgbnVsbCk7DQokbGFuZ3VhZ2UgPSAkYXBwLT5wYXJhbSgnbGFuZ3VhZ2UnLCAkbGFuZyk7DQokYXV0aG9yICAgPSAkYXBwLT5wYXJhbSgnYXV0aG9yJywgJ0NvY2twaXQgQ0xJJyk7DQoNCmlmICghJGxhbmcpIHsNCiAgICByZXR1cm4gQ0xJOjp3cml0ZWxuKCItLWxhbmcgcGFyYW1ldGVyIGlzIG1pc3NpbmciLCBmYWxzZSk7DQp9DQoNCi8vIHNldHRpbmdzDQokZXh0ZW5zaW9ucyA9IFsncGhwJywgJ21kJywgJ2h0bWwnLCAnanMnLCAndGFnJ107DQokc3RyaW5ncyAgICA9IFtdOw0KJGRpcnMgICAgICAgPSBbQ09DS1BJVF9ESVIuJy9tb2R1bGVzJ107DQoNCmZvcmVhY2ggKCRkaXJzIGFzICRkaXIpIHsNCg0KICAgICRpdGVyYXRvciA9IG5ldyBSZWN1cnNpdmVJdGVyYXRvckl0ZXJhdG9yKG5ldyBSZWN1cnNpdmVEaXJlY3RvcnlJdGVyYXRvcihDT0NLUElUX0RJUi4nL21vZHVsZXMnKSwgUmVjdXJzaXZlSXRlcmF0b3JJdGVyYXRvcjo6U0VMRl9GSVJTVCk7DQoNCiAgICBmb3JlYWNoICgkaXRlcmF0b3IgYXMgJGZpbGUpIHsNCg0KICAgICAgICBpZiAoaW5fYXJyYXkoJGZpbGUtPmdldEV4dGVuc2lvbigpLCAkZXh0ZW5zaW9ucykpIHsNCg0KICAgICAgICAgICAgJGNvbnRlbnRzID0gZmlsZV9nZXRfY29udGVudHMoJGZpbGUtPmdldFJlYWxQYXRoKCkpOw0KDQogICAgICAgICAgICBwcmVnX21hdGNoX2FsbCgnLyg/OlxAbGFuZ3xBcHBcLmkxOG5cLmdldHxBcHBcLnVpXC5ub3RpZnkpXCgoWyJcJ10pKCg/OlteXDFdfFxcLikqPylcMSgsXHMqKFsiXCddKSgoPzpbXlw0XXxcXC4pKj8pXDQpP1wpLycsICRjb250ZW50cywgJG1hdGNoZXMpOw0KDQogICAgICAgICAgICBpZiAoIWlzc2V0KCRtYXRjaGVzWzJdKSkgY29udGludWU7DQoNCiAgICAgICAgICAgIGZvcmVhY2ggKCRtYXRjaGVzWzJdIGFzICYkc3RyaW5nKSB7DQogICAgICAgICAgICAgICAgJHN0cmluZ3NbJHN0cmluZ10gPSAkc3RyaW5nOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0NCiAgICB9DQp9DQoNCmlmIChjb3VudCgkc3RyaW5ncykpIHsNCg0KICAgICRzdHJpbmdzWydAbWV0YSddID0gWw0KICAgICAgICAnbGFuZ3VhZ2UnID0+ICRsYW5ndWFnZSwNCiAgICAgICAgJ2F1dGhvcicgICA9PiAkYXV0aG9yLA0KICAgICAgICAnZGF0ZScgPT4gWw0KICAgICAgICAgICAgJ3Nob3J0ZGF5cycgICA9PiBbJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0JywgJ1N1biddLA0KICAgICAgICAgICAgJ2xvbmdkYXlzJyAgICA9PiBbJ01vbmRheScsICdUdWVzZGF5JywgJ1dlZG5lc2RheScsICdUaHVyc2RheScsICdGcmlkYXknLCAnU2F0dXJkYXknLCAnU3VuZGF5J10sDQogICAgICAgICAgICAnc2hvcnRtb250aHMnID0+IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXSwNCiAgICAgICAgICAgICdsb25nbW9udGhzJyAgPT4gWydKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknLCAnQXVndXN0JywgJ1NlcHRlbWJlcicsICdPY3RvYmVyJywgJ05vdmVtYmVyJywgJ0RlY2VtYmVyJ10NCiAgICAgICAgXQ0KICAgIF07DQoNCiAgICBpZiAoJGFwcC0+cGF0aCgiI2NvbmZpZzpjb2NrcGl0L2kxOG4veyRsYW5nfS5waHAiKSkgew0KICAgICAgICAkbGFuZ2ZpbGUgPSBpbmNsdWRlKCRhcHAtPnBhdGgoIiNjb25maWc6Y29ja3BpdC9pMThuL3skbGFuZ30ucGhwIikpOw0KICAgICAgICAkc3RyaW5ncyAgPSBhcnJheV9tZXJnZSgkc3RyaW5ncywgJGxhbmdmaWxlKTsNCiAgICB9DQoNCiAgICBrc29ydCgkc3RyaW5ncyk7DQoNCiAgICAkYXBwLT5oZWxwZXIoJ2ZzJyktPndyaXRlKCIjY29uZmlnOmNvY2twaXQvaTE4bi97JGxhbmd9LnBocCIsICc8P3BocCByZXR1cm4gJy4kYXBwLT5oZWxwZXIoJ3V0aWxzJyktPnZhcl9leHBvcnQoJHN0cmluZ3MsIHRydWUpLic7Jyk7DQp9DQoNCkNMSTo6d3JpdGVsbigiRG9uZSEgTGFuZ3VhZ2UgZmlsZSBjcmVhdGVkOiBjb25maWcvY29ja3BpdC9pMThuL3skbGFuZ30ucGhwIiwgdHJ1ZSk7DQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";