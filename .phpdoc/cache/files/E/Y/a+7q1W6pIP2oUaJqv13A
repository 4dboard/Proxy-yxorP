1689528007
waR3U4bTeM%3A8cc15380d768c01ffad7889648f6dce3-a1bc93205ded905a5481bdee3ea93387
s:7920:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDE6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tCgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImExYmM5MzIwNWRlZDkwNWE1NDgxYmRlZTNlYTkzMzg3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiYWRtaW4ucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NDQ6ImFwcC9saWIvY29ja3BpdC9tb2R1bGVzL1NpbmdsZXRvbnMvYWRtaW4ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozOTcwOiI8P3BocA0KLyoqDQogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ29ja3BpdCBwcm9qZWN0Lg0KICoNCiAqIChjKSBBcnR1ciBIZWluemUgLSDwn4Ww8J+FtvCfhbTwn4W98J+Gg/CfhbTwn4W58J+FviwgaHR0cDovL2FnZW50ZWpvLmNvbQ0KICoNCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFDQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4NCiAqLw0KDQokYXBwLT5vbignYWRtaW4uaW5pdCcsIGZ1bmN0aW9uKCkgew0KDQogICAgaWYgKCEkdGhpcy0+bW9kdWxlKCdjb2NrcGl0JyktPmdldEdyb3VwUmlnaHRzKCdzaW5nbGV0b25zJykgJiYgISR0aGlzLT5tb2R1bGUoJ3NpbmdsZXRvbnMnKS0+Z2V0U2luZ2xldG9uc0luR3JvdXAoKSkgew0KDQogICAgICAgICR0aGlzLT5iaW5kKCcvc2luZ2xldG9ucy8qJywgZnVuY3Rpb24oKSB7DQogICAgICAgICAgICByZXR1cm4gJHRoaXMoJ2FkbWluJyktPmRlbnlSZXF1ZXN0KCk7DQogICAgICAgIH0pOw0KDQogICAgICAgIHJldHVybjsNCiAgICB9DQoNCiAgICAvLyBiaW5kIGFkbWluIHJvdXRlcyAvc2luZ2xldG9uLyoNCiAgICAkdGhpcy0+YmluZENsYXNzKCdTaW5nbGV0b25zXFxDb250cm9sbGVyXFxBZG1pbicsICdzaW5nbGV0b25zJyk7DQoNCiAgICAkYWN0aXZlID0gc3RycG9zKCR0aGlzWydyb3V0ZSddLCAnL3NpbmdsZXRvbnMnKSA9PT0gMDsNCg0KICAgIC8vIGFkZCB0byBtb2R1bGVzIG1lbnUNCiAgICAkdGhpcy0+aGVscGVyKCdhZG1pbicpLT5hZGRNZW51SXRlbSgnbW9kdWxlcycsIFsNCiAgICAgICAgJ2xhYmVsJyA9PiAnU2luZ2xldG9ucycsDQogICAgICAgICdpY29uJyAgPT4gJ3NpbmdsZXRvbnM6aWNvbi5zdmcnLA0KICAgICAgICAncm91dGUnID0+ICcvc2luZ2xldG9ucycsDQogICAgICAgICdhY3RpdmUnID0+ICRhY3RpdmUNCiAgICBdKTsNCg0KICAgIGlmICgkYWN0aXZlKSB7DQogICAgICAgICR0aGlzLT5oZWxwZXIoJ2FkbWluJyktPmZhdmljb24gPSAnc2luZ2xldG9uczppY29uLnN2Zyc7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogbGlzdGVuIHRvIGFwcCBzZWFyY2ggdG8gZmlsdGVyIHNpbmdsZXRvbg0KICAgICAqLw0KICAgICR0aGlzLT5vbignY29ja3BpdC5zZWFyY2gnLCBmdW5jdGlvbigkc2VhcmNoLCAkbGlzdCkgew0KDQogICAgICAgIGZvcmVhY2ggKCR0aGlzLT5tb2R1bGUoJ3NpbmdsZXRvbnMnKS0+Z2V0U2luZ2xldG9uc0luR3JvdXAoKSBhcyAkc2luZ2xldG9uID0+ICRtZXRhKSB7DQoNCiAgICAgICAgICAgIGlmIChzdHJpcG9zKCRzaW5nbGV0b24sICRzZWFyY2gpIT09ZmFsc2UgfHwgc3RyaXBvcygkbWV0YVsnbGFiZWwnXSwgJHNlYXJjaCkhPT1mYWxzZSkgew0KDQogICAgICAgICAgICAgICAgJGxpc3RbXSA9IFsNCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nICA9PiAndGgnLA0KICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+ICRtZXRhWydsYWJlbCddID8gJG1ldGFbJ2xhYmVsJ10gOiAkbWV0YVsnbmFtZSddLA0KICAgICAgICAgICAgICAgICAgICAndXJsJyAgID0+ICR0aGlzLT5yb3V0ZVVybCgnL3NpbmdsZXRvbnMvc2luZ2xldG9uLycuJG1ldGFbJ25hbWUnXSkNCiAgICAgICAgICAgICAgICBdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfSk7DQoNCiAgICAvLyBkYXNoYm9hcmQgd2lkZ2V0cw0KICAgICR0aGlzLT5vbignYWRtaW4uZGFzaGJvYXJkLndpZGdldHMnLCBmdW5jdGlvbigkd2lkZ2V0cykgew0KDQogICAgICAgICRzaW5nbGV0b25zID0gJHRoaXMtPm1vZHVsZSgnc2luZ2xldG9ucycpLT5nZXRTaW5nbGV0b25zSW5Hcm91cCgpOw0KDQogICAgICAgICR3aWRnZXRzW10gPSBbDQogICAgICAgICAgICAnbmFtZScgICAgPT4gJ3NpbmdsZXRvbicsDQogICAgICAgICAgICAnY29udGVudCcgPT4gJHRoaXMtPnZpZXcoJ3NpbmdsZXRvbnM6dmlld3Mvd2lkZ2V0cy9kYXNoYm9hcmQucGhwJywgY29tcGFjdCgnc2luZ2xldG9ucycpKSwNCiAgICAgICAgICAgICdhcmVhJyAgICA9PiAnYXNpZGUtcmlnaHQnDQogICAgICAgIF07DQoNCiAgICB9LCAxMDApOw0KDQogICAgLy8gcmVnaXN0ZXIgZXZlbnRzIGZvciBhdXRvY29tcGxldGUNCiAgICAkdGhpcy0+b24oJ2NvY2twaXQud2ViaG9vay5ldmVudHMnLCBmdW5jdGlvbigkdHJpZ2dlcnMpIHsNCg0KICAgICAgICBmb3JlYWNoKFsNCiAgICAgICAgICAgICdzaW5nbGV0b24uZ2V0RGF0YS5hZnRlcicsDQogICAgICAgICAgICAnc2luZ2xldG9uLmdldERhdGEuYWZ0ZXIueyRuYW1lfScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnJlbW92ZScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnJlbW92ZS57JG5hbWV9JywNCiAgICAgICAgICAgICdzaW5nbGV0b24uc2F2ZS5hZnRlcicsDQogICAgICAgICAgICAnc2luZ2xldG9uLnNhdmUuYWZ0ZXIueyRuYW1lfScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnNhdmUuYmVmb3JlJywNCiAgICAgICAgICAgICdzaW5nbGV0b24uc2F2ZS5iZWZvcmUueyRuYW1lfScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnNhdmVEYXRhLmFmdGVyJywNCiAgICAgICAgICAgICdzaW5nbGV0b24uc2F2ZURhdGEuYWZ0ZXIueyRuYW1lfScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnNhdmVEYXRhLmJlZm9yZScsDQogICAgICAgICAgICAnc2luZ2xldG9uLnNhdmVEYXRhLmJlZm9yZS57JG5hbWV9JywNCiAgICAgICAgXSBhcyAmJGV2dCkgeyAkdHJpZ2dlcnNbXSA9ICRldnQ7IH0NCiAgICB9KTsNCg0KICAgIC8vIHVwZGF0ZSBhc3NldHMgcmVmZXJlbmNlcyBvbiBmaWxlIHVwZGF0ZQ0KICAgICR0aGlzLT5vbignY29ja3BpdC5hc3NldHMudXBkYXRlZmlsZScsIGZ1bmN0aW9uKCRhc3NldCkgew0KDQogICAgICAgICRpZCA9ICRhc3NldFsnX2lkJ107DQogICAgICAgICRmaWx0ZXIgPSAoJHRoaXMtPnN0b3JhZ2UtPnR5cGUgPT0gJ21vbmdvbGl0ZScpID8NCiAgICAgICAgICAgIGZ1bmN0aW9uICgkZG9jKSB1c2UgKCRpZCkgeyByZXR1cm4gc3RycG9zKGpzb25fZW5jb2RlKCRkb2MpLCAkaWQpICE9PSBmYWxzZTt9DQogICAgICAgICAgICA6DQogICAgICAgICAgICBbJyR3aGVyZScgPT4gImZ1bmN0aW9uKCkgeyByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcykuaW5kZXhPZigneyRpZH0nKSA+IC0xOyB9Il0NCiAgICAgICAgOw0KDQogICAgICAgICR1cGRhdGUgPSBmdW5jdGlvbigmJGl0ZW1zKSB1c2UoJGFzc2V0LCAkaWQsICYkdXBkYXRlKSB7DQoNCiAgICAgICAgICAgIGlmICghaXNfYXJyYXkoJGl0ZW1zKSkgcmV0dXJuICRpdGVtczsNCg0KICAgICAgICAgICAgZm9yZWFjaCAoJGl0ZW1zIGFzICRrID0+ICYkdikgew0KICAgICAgICAgICAgICAgIGlmICghaXNfYXJyYXkoJHYpKSBjb250aW51ZTsNCiAgICAgICAgICAgICAgICBpZiAoaXNfYXJyYXkoJGl0ZW1zWyRrXSkpICRpdGVtc1ska10gPSAkdXBkYXRlKCRpdGVtc1ska10pOw0KICAgICAgICAgICAgICAgIGlmIChpc3NldCgkdlsnX2lkJ10pICYmICR2WydfaWQnXSA9PSAkaWQpICRpdGVtc1ska10gPSAkYXNzZXQ7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gJGl0ZW1zOw0KICAgICAgICB9Ow0KDQogICAgICAgICRzaW5nbGV0b25zID0gJHRoaXMtPnN0b3JhZ2UtPmZpbmQoJ3NpbmdsZXRvbnMnLCBbJ2ZpbHRlcicgPT4gJGZpbHRlcl0pLT50b0FycmF5KCk7DQoNCiAgICAgICAgaWYgKCFjb3VudCgkc2luZ2xldG9ucykpIHJldHVybjsNCg0KICAgICAgICAkc2luZ2xldG9ucyA9ICR1cGRhdGUoJHNpbmdsZXRvbnMpOw0KDQogICAgICAgIGZvcmVhY2ggKCRzaW5nbGV0b25zIGFzICRzaW5nbGV0b24pIHsNCiAgICAgICAgICAgICR0aGlzLT5zdG9yYWdlLT5zYXZlKCdzaW5nbGV0b25zJywgJHNpbmdsZXRvbik7DQogICAgICAgIH0NCiAgICB9KTsNCn0pOw0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";