1689528007
waR3U4bTeM%3Aa34df5cb617d3f48dc31d06c2a7c83ef-7a6714f6e288db86abad227aff2b3e16
s:3832:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDE6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tCgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdhNjcxNGY2ZTI4OGRiODZhYmFkMjI3YWZmMmIzZTE2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6InJlbW92ZWZpZWxkLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjY2OiJhcHAvbGliL2NvY2twaXQvbW9kdWxlcy9Db2xsZWN0aW9ucy9jbGkvY29sbGVjdGlvbi9yZW1vdmVmaWVsZC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjg3NjoiPD9waHANCi8qKg0KICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIENvY2twaXQgcHJvamVjdC4NCiAqDQogKiAoYykgQXJ0dXIgSGVpbnplIC0g8J+FsPCfhbbwn4W08J+FvfCfhoPwn4W08J+FufCfhb4sIGh0dHA6Ly9hZ2VudGVqby5jb20NCiAqDQogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQ0KICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuDQogKi8NCg0KaWYgKCFDT0NLUElUX0NMSSkgcmV0dXJuOw0KDQokY29sbGVjdGlvbiA9ICRhcHAtPnBhcmFtKCdjb2xsZWN0aW9uJywgbnVsbCk7DQokZmllbGQgPSAkYXBwLT5wYXJhbSgnZmllbGQnLCBudWxsKTsNCg0KaWYgKCEkY29sbGVjdGlvbikgew0KICAgIENMSTo6d3JpdGVsbignQ29sbGVjdGlvbiBwYXJhbWV0ZXIgbWlzc2luZycsIGZhbHNlKTsNCiAgICByZXR1cm47DQp9DQoNCmlmICghJGZpZWxkKSB7DQogICAgQ0xJOjp3cml0ZWxuKCdGaWVsZCBwYXJhbWV0ZXIgbWlzc2luZycsIGZhbHNlKTsNCiAgICByZXR1cm47DQp9DQoNCiRtZXRhID0gJGFwcC0+bW9kdWxlKCdjb2xsZWN0aW9ucycpLT5jb2xsZWN0aW9uKCRjb2xsZWN0aW9uKTsNCg0KaWYgKCEkbWV0YSkgew0KICAgIENMSTo6d3JpdGVsbigiQ29sbGVjdGlvbiA8eyRjb2xsZWN0aW9ufT4gbm90IGZvdW5kISIsIGZhbHNlKTsNCiAgICByZXR1cm47DQp9DQoNCiRpZCA9ICRtZXRhWydfaWQnXTsNCg0KJGFwcC0+c3RvcmFnZS0+cmVtb3ZlRmllbGQoImNvbGxlY3Rpb25zL3skaWR9IiwgJGZpZWxkKTsNCg0KQ0xJOjp3cml0ZWxuKCJGaWVsZCA8eyRmaWVsZH0+IHJlbW92ZWQhIiwgdHJ1ZSk7IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";