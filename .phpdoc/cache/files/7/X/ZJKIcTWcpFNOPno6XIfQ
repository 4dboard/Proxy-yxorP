1689528006
waR3U4bTeM%3A35789dc041feb6cb13d5d52a04f128b5-130e2f26c332ded130a97aabd6c4b0b7
s:5876:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDE6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tCgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjEzMGUyZjI2YzMzMmRlZDEzMGE5N2FhYmQ2YzRiMGI3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6ImNyZWF0ZS1sYW5nLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjUxOiJhcHAvbGliL2NvY2twaXQvbW9kdWxlcy9Db2NrcGl0L2NsaS9jcmVhdGUtbGFuZy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjI0MjE6Ijw/cGhwDQovKioNCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDb2NrcGl0IHByb2plY3QuDQogKg0KICogKGMpIEFydHVyIEhlaW56ZSAtIPCfhbDwn4W28J+FtPCfhb3wn4aD8J+FtPCfhbnwn4W+LCBodHRwOi8vYWdlbnRlam8uY29tDQogKg0KICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UNCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLg0KICovDQoNCmlmICghQ09DS1BJVF9DTEkpIHJldHVybjsNCg0KJGxhbmcgICAgID0gJGFwcC0+cGFyYW0oJ2xhbmcnLCBudWxsKTsNCiRsYW5ndWFnZSA9ICRhcHAtPnBhcmFtKCdsYW5ndWFnZScsICRsYW5nKTsNCiRhdXRob3IgICA9ICRhcHAtPnBhcmFtKCdhdXRob3InLCAnQ29ja3BpdCBDTEknKTsNCg0KaWYgKCEkbGFuZykgew0KICAgIHJldHVybiBDTEk6OndyaXRlbG4oIi0tbGFuZyBwYXJhbWV0ZXIgaXMgbWlzc2luZyIsIGZhbHNlKTsNCn0NCg0KLy8gc2V0dGluZ3MNCiRleHRlbnNpb25zID0gWydwaHAnLCAnbWQnLCAnaHRtbCcsICdqcycsICd0YWcnXTsNCiRzdHJpbmdzICAgID0gW107DQokZGlycyAgICAgICA9IFtDT0NLUElUX0RJUi4nL21vZHVsZXMnXTsNCg0KZm9yZWFjaCAoJGRpcnMgYXMgJGRpcikgew0KDQogICAgJGl0ZXJhdG9yID0gbmV3IFJlY3Vyc2l2ZUl0ZXJhdG9ySXRlcmF0b3IobmV3IFJlY3Vyc2l2ZURpcmVjdG9yeUl0ZXJhdG9yKENPQ0tQSVRfRElSLicvbW9kdWxlcycpLCBSZWN1cnNpdmVJdGVyYXRvckl0ZXJhdG9yOjpTRUxGX0ZJUlNUKTsNCg0KICAgIGZvcmVhY2ggKCRpdGVyYXRvciBhcyAkZmlsZSkgew0KDQogICAgICAgIGlmIChpbl9hcnJheSgkZmlsZS0+Z2V0RXh0ZW5zaW9uKCksICRleHRlbnNpb25zKSkgew0KDQogICAgICAgICAgICAkY29udGVudHMgPSBmaWxlX2dldF9jb250ZW50cygkZmlsZS0+Z2V0UmVhbFBhdGgoKSk7DQoNCiAgICAgICAgICAgIHByZWdfbWF0Y2hfYWxsKCcvKD86XEBsYW5nfEFwcFwuaTE4blwuZ2V0fEFwcFwudWlcLm5vdGlmeSlcKChbIlwnXSkoKD86W15cMV18XFwuKSo/KVwxKCxccyooWyJcJ10pKCg/OlteXDRdfFxcLikqPylcNCk/XCkvJywgJGNvbnRlbnRzLCAkbWF0Y2hlcyk7DQoNCiAgICAgICAgICAgIGlmICghaXNzZXQoJG1hdGNoZXNbMl0pKSBjb250aW51ZTsNCg0KICAgICAgICAgICAgZm9yZWFjaCAoJG1hdGNoZXNbMl0gYXMgJiRzdHJpbmcpIHsNCiAgICAgICAgICAgICAgICAkc3RyaW5nc1skc3RyaW5nXSA9ICRzdHJpbmc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KICAgIH0NCn0NCg0KaWYgKGNvdW50KCRzdHJpbmdzKSkgew0KDQogICAgJHN0cmluZ3NbJ0BtZXRhJ10gPSBbDQogICAgICAgICdsYW5ndWFnZScgPT4gJGxhbmd1YWdlLA0KICAgICAgICAnYXV0aG9yJyAgID0+ICRhdXRob3IsDQogICAgICAgICdkYXRlJyA9PiBbDQogICAgICAgICAgICAnc2hvcnRkYXlzJyAgID0+IFsnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnLCAnU3VuJ10sDQogICAgICAgICAgICAnbG9uZ2RheXMnICAgID0+IFsnTW9uZGF5JywgJ1R1ZXNkYXknLCAnV2VkbmVzZGF5JywgJ1RodXJzZGF5JywgJ0ZyaWRheScsICdTYXR1cmRheScsICdTdW5kYXknXSwNCiAgICAgICAgICAgICdzaG9ydG1vbnRocycgPT4gWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLA0KICAgICAgICAgICAgJ2xvbmdtb250aHMnICA9PiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXQ0KICAgICAgICBdDQogICAgXTsNCg0KICAgIGlmICgkYXBwLT5wYXRoKCIjY29uZmlnOmNvY2twaXQvaTE4bi97JGxhbmd9LnBocCIpKSB7DQogICAgICAgICRsYW5nZmlsZSA9IGluY2x1ZGUoJGFwcC0+cGF0aCgiI2NvbmZpZzpjb2NrcGl0L2kxOG4veyRsYW5nfS5waHAiKSk7DQogICAgICAgICRzdHJpbmdzICA9IGFycmF5X21lcmdlKCRzdHJpbmdzLCAkbGFuZ2ZpbGUpOw0KICAgIH0NCg0KICAgIGtzb3J0KCRzdHJpbmdzKTsNCg0KICAgICRhcHAtPmhlbHBlcignZnMnKS0+d3JpdGUoIiNjb25maWc6Y29ja3BpdC9pMThuL3skbGFuZ30ucGhwIiwgJzw/cGhwIHJldHVybiAnLiRhcHAtPmhlbHBlcigndXRpbHMnKS0+dmFyX2V4cG9ydCgkc3RyaW5ncywgdHJ1ZSkuJzsnKTsNCn0NCg0KQ0xJOjp3cml0ZWxuKCJEb25lISBMYW5ndWFnZSBmaWxlIGNyZWF0ZWQ6IGNvbmZpZy9jb2NrcGl0L2kxOG4veyRsYW5nfS5waHAiLCB0cnVlKTsNCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";