1689528003
waR3U4bTeM%3A9a593b2b55b44e2d39845dc0bb39eed9-4777851c498c56eb7d94a110c476e665
s:6020:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjQ3Nzc4NTFjNDk4YzU2ZWI3ZDk0YTExMGM0NzZlNjY1IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjM6ImZpeC1lbnRpdHktZW5jb2RpbmcucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTY6ImFwcC9saWIvY29ja3BpdC9hZGRvbnMveXhvclAvY2xpL2ZpeC1lbnRpdHktZW5jb2RpbmcucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNTY3OiI8P3BocAovKgogKiBodG1sX2VudGl0eV9kZWNvZGUgaW4gYWxsIHd5c2l3eWcgZmllbGRzIGluIGFsbCBjb2xsZWN0aW9ucwogKi8KCi8qIFRoaXMgaXMgYSBzZWN1cml0eSBtZWFzdXJlIHRvIHByZXZlbnQgdGhlIHNjcmlwdCBmcm9tIGJlaW5nIGV4ZWN1dGVkIGluIHRoZSBicm93c2VyLiAqLwppZiAoIUNPQ0tQSVRfQ0xJKSByZXR1cm47Ci8qIFNldHRpbmcgdGhlIHZhcmlhYmxlIGAkdGltZV9hbGxgIHRvIHRoZSBjdXJyZW50IHRpbWUuICovCgokdGltZV9hbGwgPSB0aW1lKCk7Ci8qIEl0J3MgZ2V0dGluZyBhbGwgY29sbGVjdGlvbnMgZnJvbSB0aGUgZGF0YWJhc2UuICovCgokY29sbGVjdGlvbnMgPSBjb2NrcGl0KCdjb2xsZWN0aW9ucycpLT5jb2xsZWN0aW9ucygpOwoKJGxhbmd1YWdlcyA9IFtdOwovKiBJdCdzIGNoZWNraW5nIGlmIHRoZSBgJGFwcFsnbGFuZ3VhZ2VzJ11gIGFycmF5IGlzIHNldCBhbmQgaWYgaXQncyBhbiBhcnJheS4gKi8KaWYgKGlzc2V0KCRhcHBbJ2xhbmd1YWdlcyddKSAmJiBpc19hcnJheSgkYXBwWydsYW5ndWFnZXMnXSkpIHsKICAgIC8qIEl0J3MgZ2V0dGluZyBhbGwgbGFuZ3VhZ2VzIGZyb20gdGhlIGAkYXBwWydsYW5ndWFnZXMnXWAgYXJyYXkuICovCiAgICBmb3JlYWNoICgkYXBwWydsYW5ndWFnZXMnXSBhcyAkbGFuZyA9PiAkbGFiZWwpIHsKICAgICAgICBpZiAoJGxhbmcgPT0gJ2RlZmF1bHQnKSBjb250aW51ZTsKICAgICAgICAkbGFuZ3VhZ2VzW10gPSAkbGFuZzsKICAgIH0KICAgIC8qIEl0J3MgY3JlYXRpbmcgYW4gZW1wdHkgYXJyYXkuICovCn0KCiRmaXhlcyA9IFtdOwoKLyogSXQncyBnZXR0aW5nIGFsbCBjb2xsZWN0aW9ucyBmcm9tIHRoZSBkYXRhYmFzZS4gKi8KZm9yZWFjaCAoJGNvbGxlY3Rpb25zIGFzICRjb2wpIHsKCiAgICAvKiBJdCdzIGNoZWNraW5nIGlmIHRoZSBgJGNvbFsnZmllbGRzJ11gIGFycmF5IGlzIHNldCBhbmQgaWYgaXQncyBhbiBhcnJheS4gKi8KICAgIGlmIChpc3NldCgkY29sWydmaWVsZHMnXSkgJiYgaXNfYXJyYXkoJGNvbFsnZmllbGRzJ10pKSB7CgogICAgICAgICRmID0gW107CgogICAgICAgIC8qIEl0J3MgZ2V0dGluZyBhbGwgZmllbGRzIGZyb20gdGhlIGNvbGxlY3Rpb24uICovCiAgICAgICAgZm9yZWFjaCAoJGNvbFsnZmllbGRzJ10gYXMgJGZpZWxkKSB7CgogICAgICAgICAgICAvLyBjaGVjayBmb3Igd3lzaXd5ZyBmaWVsZHMKICAgICAgICAgICAgaWYgKCRmaWVsZFsndHlwZSddID09ICd3eXNpd3lnJykgewoKICAgICAgICAgICAgICAgICRmW10gPSAkZmllbGRbJ25hbWUnXTsKCiAgICAgICAgICAgICAgICAvKiBJdCdzIGNoZWNraW5nIGlmIHRoZSBgJGZpZWxkWydsb2NhbGl6ZSddYCB2YXJpYWJsZSBpcyBzZXQgdG8gYHRydWVgLiAqLwogICAgICAgICAgICAgICAgaWYgKCRmaWVsZFsnbG9jYWxpemUnXSA9PSB0cnVlKSB7CgogICAgICAgICAgICAgICAgICAgIC8vIGNoZWNrIHRyYW5zbGF0ZWQgZmllbGRzCiAgICAgICAgICAgICAgICAgICAgLyogSXQncyBnZXR0aW5nIGFsbCBsYW5ndWFnZXMgZnJvbSB0aGUgYCRhcHBbJ2xhbmd1YWdlcyddYCBhcnJheS4gKi8KICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkbGFuZ3VhZ2VzIGFzICRsYW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRmW10gPSAkZmllbGRbJ25hbWUnXSAuICdfJyAuICRsYW5nOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLyogSXQncyBjaGVja2luZyBpZiB0aGUgYCRmYCBhcnJheSBpcyBlbXB0eSBhbmQgaWYgaXQncyBub3QgZW1wdHkgaXQncyBhZGRpbmcgdGhlIGAkZmAgYXJyYXkgdG8gdGhlIGAkZml4ZXNgIGFycmF5LiAqLwogICAgICAgIGlmICghZW1wdHkoJGYpKSAkZml4ZXNbJGNvbFsnbmFtZSddXSA9ICRmOwogICAgfQp9Ci8qIEl0J3MgZ2V0dGluZyBhbGwgY29sbGVjdGlvbnMgZnJvbSB0aGUgZGF0YWJhc2UuICovCgpmb3JlYWNoICgkZml4ZXMgYXMgJGNvbGxlY3Rpb24gPT4gJGZpZWxkcykgewoKICAgIC8qIEl0J3MgZ2V0dGluZyB0aGUgbnVtYmVyIG9mIGVudHJpZXMgaW4gdGhlIGNvbGxlY3Rpb24uICovCiAgICAkY291bnQgPSBjb2NrcGl0KCdjb2xsZWN0aW9ucycpLT5jb3VudCgkY29sbGVjdGlvbik7CgogICAgLyogSXQncyB3cml0aW5nIHRoZSBudW1iZXIgb2YgZW50cmllcyBpbiB0aGUgY29sbGVjdGlvbiB0byB0aGUgY29uc29sZS4gKi8KICAgIENMSTo6d3JpdGVsbigiRm91bmQgJGNvdW50IGVudHJpZXMgaW4gJGNvbGxlY3Rpb24iKTsKCiAgICAvKiBJdCdzIGNyZWF0aW5nIGFuIGVtcHR5IGFycmF5LiAqLwogICAgJG9wdGlvbnMgPSBbXTsKCiAgICAvKiBJdCdzIGdldHRpbmcgYWxsIGZpZWxkcyBmcm9tIHRoZSBjb2xsZWN0aW9uLiAqLwogICAgZm9yZWFjaCAoJGZpZWxkcyBhcyAkZmllbGQpIHsKICAgICAgICAvKiBJdCdzIGFkZGluZyB0aGUgYCRmaWVsZGAgdmFyaWFibGUgdG8gdGhlIGAkb3B0aW9uc1snZmllbGRzJ11gIGFycmF5LiAqLwogICAgICAgICRvcHRpb25zWydmaWVsZHMnXVskZmllbGRdID0gdHJ1ZTsKICAgIH0KCiAgICAvKiBJdCdzIGdldHRpbmcgYWxsIGVudHJpZXMgZnJvbSB0aGUgY29sbGVjdGlvbi4gKi8KICAgICRlbnRyaWVzID0gY29ja3BpdCgnY29sbGVjdGlvbnMnKS0+ZmluZCgkY29sbGVjdGlvbiwgJG9wdGlvbnMpOwoKICAgIC8qIEl0J3Mgd3JpdGluZyB0aGUgYCRmaWVsZHNgIGFycmF5IHRvIHRoZSBjb25zb2xlLiAqLwogICAgQ0xJOjp3cml0ZWxuKCJTdGFydGluZyB0byBjb252ZXJ0IGZpZWxkczogIiAuIGltcGxvZGUoJywgJywgJGZpZWxkcykpOwoKICAgIC8qIEl0J3Mgc2V0dGluZyB0aGUgYCR0aW1lYCB2YXJpYWJsZSB0byB0aGUgY3VycmVudCB0aW1lLiAqLwogICAgJHRpbWUgPSB0aW1lKCk7CgogICAgLyogSXQncyBnZXR0aW5nIGFsbCBlbnRyaWVzIGZyb20gdGhlIGNvbGxlY3Rpb24uICovCiAgICBmb3JlYWNoICgkZW50cmllcyBhcyAmJGVudHJ5KSB7CgogICAgICAgIC8qIEl0J3MgZ2V0dGluZyBhbGwgZmllbGRzIGZyb20gdGhlIGNvbGxlY3Rpb24uICovCiAgICAgICAgZm9yZWFjaCAoJGZpZWxkcyBhcyAkZmllbGQpIHsKICAgICAgICAgICAgaWYgKC8qIEl0J3MgZGVjb2RpbmcgdGhlIEhUTUwgZW50aXRpZXMgaW4gdGhlIGAkZW50cnlbJGZpZWxkXWAgdmFyaWFibGUuICovCiAgICAgICAgICAgIGlzc2V0KCRlbnRyeVskZmllbGRdKSkgewogICAgICAgICAgICAgICAgJGVudHJ5WyRmaWVsZF0gPSBodG1sX2VudGl0eV9kZWNvZGUoJGVudHJ5WyRmaWVsZF0pOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgIH0KCiAgICAvLyBzYXZlIGVudHJpZXMKICAgIGNvY2twaXQoJ2NvbGxlY3Rpb25zJyktPnNhdmUoJGNvbGxlY3Rpb24sICRlbnRyaWVzKTsKCiAgICBDTEk6OndyaXRlbG4oIkNvbnZlcnRlZCAkY291bnQgaXRlbXMgaW4gIiAuICh0aW1lKCkgLSAkdGltZSkgLiAnIHNlY29uZHMnKTsKCn0KCkNMSTo6d3JpdGVsbigiRG9uZSBhbGwgaW4gIiAuICh0aW1lKCkgLSAkdGltZV9hbGwpIC4gJyBzZWNvbmRzJyk7CgoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";